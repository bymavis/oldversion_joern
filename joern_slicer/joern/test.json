[
  {
    "nodes-lineNo": [
      "0_89",
      "0_90",
      "0_92",
      "0_93",
      "0_95",
      "0_96",
      "0_97"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        6
      ],
      [
        3,
        6
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        4,
        4
      ],
      [
        5,
        5
      ],
      [
        5,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/tes copy.cpp"
    ],
    "nodes-line": [
      "int64_t bshuf_trans_elem(void* in, void* out, const size_t lda,\n",
      "        const size_t ldb, const size_t elem_size) {\n",
      "    char* in_b = (char*) in;\n",
      "    char* out_b = (char*) out;\n",
      "    for (ii = 0; ii < lda; ii++) {\n",
      "        for (jj = 0; jj < ldb; jj++) {\n",
      "            memcpy(&out_b[(jj*lda + ii) * elem_size],\n"
    ],
    "nodes-line-sym": [
      "VAR1 FUN1 ( void * VAR2 , void * VAR3 , const size_t VAR4 ,",
      "const size_t VAR5 , const size_t VAR6 ) {",
      "char * VAR7 = ( char * ) VAR2 ;",
      "char * VAR8 = ( char * ) VAR3 ;",
      "for ( VAR9 = 0 ; VAR9 < VAR4 ; VAR9 ++ ) {",
      "for ( VAR10 = 0 ; VAR10 < VAR5 ; VAR10 ++ ) {",
      "memcpy ( & VAR8 [ ( VAR10 * VAR4 + VAR9 ) * VAR6 ] ,"
    ]
  },
  {
    "nodes-lineNo": [
      "0_89",
      "0_90",
      "0_92",
      "0_93",
      "0_95",
      "0_96",
      "0_97"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        6
      ],
      [
        3,
        6
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        4,
        4
      ],
      [
        5,
        5
      ],
      [
        5,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/tes.cpp"
    ],
    "nodes-line": [
      "int64_t bshuf_trans_elem(void* in, void* out, const size_t lda,\n",
      "        const size_t ldb, const size_t elem_size) {\n",
      "    char* in_b = (char*) in;\n",
      "    char* out_b = (char*) out;\n",
      "    for (ii = 0; ii < lda; ii++) {\n",
      "        for (jj = 0; jj < ldb; jj++) {\n",
      "            memcpy(&out_b[(jj*lda + ii) * elem_size],\n"
    ],
    "nodes-line-sym": [
      "VAR1 FUN1 ( void * VAR2 , void * VAR3 , const size_t VAR4 ,",
      "const size_t VAR5 , const size_t VAR6 ) {",
      "char * VAR7 = ( char * ) VAR2 ;",
      "char * VAR8 = ( char * ) VAR3 ;",
      "for ( VAR9 = 0 ; VAR9 < VAR4 ; VAR9 ++ ) {",
      "for ( VAR10 = 0 ; VAR10 < VAR5 ; VAR10 ++ ) {",
      "memcpy ( & VAR8 [ ( VAR10 * VAR4 + VAR9 ) * VAR6 ] ,"
    ]
  },
  {
    "nodes-lineNo": [
      "0_89",
      "0_90",
      "0_92",
      "0_93",
      "0_95",
      "0_96",
      "0_97"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        6
      ],
      [
        3,
        6
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        4,
        4
      ],
      [
        5,
        5
      ],
      [
        5,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/new/tes.cpp"
    ],
    "nodes-line": [
      "int64_t bshuf_trans_elem(void* in, void* out, const size_t lda,\n",
      "        const size_t ldb, const size_t elem_size) {\n",
      "    char* in_b = (char*) in;\n",
      "    char* out_b = (char*) out;\n",
      "    for (ii = 0; ii < lda; ii++) {\n",
      "        for (jj = 0; jj < ldb; jj++) {\n",
      "            memcpy(&out_b[(jj*lda + ii) * elem_size],\n"
    ],
    "nodes-line-sym": [
      "VAR1 FUN1 ( void * VAR2 , void * VAR3 , const size_t VAR4 ,",
      "const size_t VAR5 , const size_t VAR6 ) {",
      "char * VAR7 = ( char * ) VAR2 ;",
      "char * VAR8 = ( char * ) VAR3 ;",
      "for ( VAR9 = 0 ; VAR9 < VAR4 ; VAR9 ++ ) {",
      "for ( VAR10 = 0 ; VAR10 < VAR5 ; VAR10 ++ ) {",
      "memcpy ( & VAR8 [ ( VAR10 * VAR4 + VAR9 ) * VAR6 ] ,"
    ]
  },
  {
    "nodes-lineNo": [
      "0_193"
    ],
    "keyLine": "0_193",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/294/CWE416_Use_After_Free__malloc_free_int64_t_12.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_83",
      "0_99",
      "0_100",
      "0_109"
    ],
    "keyLine": "0_99",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/294/CWE416_Use_After_Free__malloc_free_int64_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_41"
    ],
    "keyLine": "0_41",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/294/CWE416_Use_After_Free__malloc_free_int64_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135",
      "0_137",
      "0_138",
      "0_164",
      "0_170"
    ],
    "keyLine": "0_137",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/294/CWE416_Use_After_Free__malloc_free_int64_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "FUN3 ( VAR1 [ 0 ] ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_45",
      "0_46",
      "0_59"
    ],
    "keyLine": "0_45",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/294/CWE416_Use_After_Free__malloc_free_int64_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_59"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/294/CWE416_Use_After_Free__malloc_free_int64_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_33",
      "0_36",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        5
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        4
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        0
      ],
      [
        4,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/339/CWE416_Use_After_Free__malloc_free_long_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "VAR2 [ VAR1 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_63",
      "0_65",
      "0_66",
      "0_69",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        5
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/339/CWE416_Use_After_Free__malloc_free_long_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "VAR2 [ VAR1 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_132"
    ],
    "keyLine": "0_132",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/339/CWE416_Use_After_Free__malloc_free_long_17.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_36",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        0
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        2,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/339/CWE416_Use_After_Free__malloc_free_long_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "            for(i = 0; i < 100; i++)\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_93",
      "0_95",
      "0_96",
      "0_101",
      "0_109"
    ],
    "keyLine": "0_95",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/339/CWE416_Use_After_Free__malloc_free_long_17.c"
    ],
    "nodes-line": [
      "    for(h = 0; h < 1; h++)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/397/CWE416_Use_After_Free__return_freed_ptr_15.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/397/CWE416_Use_After_Free__return_freed_ptr_15.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/397/CWE416_Use_After_Free__return_freed_ptr_15.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/397/CWE416_Use_After_Free__return_freed_ptr_15.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/397/CWE416_Use_After_Free__return_freed_ptr_15.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_159"
    ],
    "keyLine": "0_159",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/397/CWE416_Use_After_Free__return_freed_ptr_15.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/332/CWE416_Use_After_Free__malloc_free_long_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/332/CWE416_Use_After_Free__malloc_free_long_10.c"
    ],
    "nodes-line": [
      "    if(globalFalse)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/332/CWE416_Use_After_Free__malloc_free_long_10.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/332/CWE416_Use_After_Free__malloc_free_long_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/332/CWE416_Use_After_Free__malloc_free_long_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_43",
      "0_44",
      "0_48",
      "0_53"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/346/CWE416_Use_After_Free__malloc_free_struct_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_68",
      "0_70",
      "0_71",
      "0_76",
      "0_77",
      "0_81"
    ],
    "keyLine": "0_70",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/346/CWE416_Use_After_Free__malloc_free_struct_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_166",
      "0_168",
      "0_169",
      "0_174",
      "0_175",
      "0_183"
    ],
    "keyLine": "0_168",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/346/CWE416_Use_After_Free__malloc_free_struct_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_48"
    ],
    "keyLine": "0_48",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/346/CWE416_Use_After_Free__malloc_free_struct_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_208"
    ],
    "keyLine": "0_208",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/346/CWE416_Use_After_Free__malloc_free_struct_04.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/373/CWE416_Use_After_Free__malloc_free_wchar_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/373/CWE416_Use_After_Free__malloc_free_wchar_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "FUN3 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/373/CWE416_Use_After_Free__malloc_free_wchar_t_11.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/373/CWE416_Use_After_Free__malloc_free_wchar_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/373/CWE416_Use_After_Free__malloc_free_wchar_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/385/CWE416_Use_After_Free__return_freed_ptr_03.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/385/CWE416_Use_After_Free__return_freed_ptr_03.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/385/CWE416_Use_After_Free__return_freed_ptr_03.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/385/CWE416_Use_After_Free__return_freed_ptr_03.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/385/CWE416_Use_After_Free__return_freed_ptr_03.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/385/CWE416_Use_After_Free__return_freed_ptr_03.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_90",
      "0_92",
      "0_97"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/368/CWE416_Use_After_Free__malloc_free_wchar_t_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/368/CWE416_Use_After_Free__malloc_free_wchar_t_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_141",
      "0_143",
      "0_144",
      "0_152"
    ],
    "keyLine": "0_143",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/368/CWE416_Use_After_Free__malloc_free_wchar_t_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_177"
    ],
    "keyLine": "0_177",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/368/CWE416_Use_After_Free__malloc_free_wchar_t_06.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_114",
      "0_121",
      "0_122",
      "0_130"
    ],
    "keyLine": "0_121",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/368/CWE416_Use_After_Free__malloc_free_wchar_t_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE!=5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_90",
      "0_92",
      "0_93",
      "0_97"
    ],
    "keyLine": "0_92",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/368/CWE416_Use_After_Free__malloc_free_wchar_t_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_161",
      "0_163",
      "0_164",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_163",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/309/CWE416_Use_After_Free__malloc_free_int_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_42",
      "0_46",
      "0_51"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/309/CWE416_Use_After_Free__malloc_free_int_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_69",
      "0_74",
      "0_78"
    ],
    "keyLine": "0_68",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/309/CWE416_Use_After_Free__malloc_free_int_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_129",
      "0_136",
      "0_137",
      "0_142",
      "0_150"
    ],
    "keyLine": "0_136",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/309/CWE416_Use_After_Free__malloc_free_int_07.c"
    ],
    "nodes-line": [
      "    if(staticFive!=5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/309/CWE416_Use_After_Free__malloc_free_int_07.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_78"
    ],
    "keyLine": "0_78",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/309/CWE416_Use_After_Free__malloc_free_int_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_152"
    ],
    "keyLine": "0_152",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/386/CWE416_Use_After_Free__return_freed_ptr_04.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/399/CWE416_Use_After_Free__return_freed_ptr_17.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/399/CWE416_Use_After_Free__return_freed_ptr_17.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/399/CWE416_Use_After_Free__return_freed_ptr_17.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/399/CWE416_Use_After_Free__return_freed_ptr_17.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/399/CWE416_Use_After_Free__return_freed_ptr_17.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_125"
    ],
    "keyLine": "0_125",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/399/CWE416_Use_After_Free__return_freed_ptr_17.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_162",
      "0_164",
      "0_165",
      "0_170",
      "0_178"
    ],
    "keyLine": "0_164",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/326/CWE416_Use_After_Free__malloc_free_long_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_70",
      "0_75",
      "0_79"
    ],
    "keyLine": "0_69",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/326/CWE416_Use_After_Free__malloc_free_long_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_43",
      "0_47",
      "0_52"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/326/CWE416_Use_After_Free__malloc_free_long_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_203"
    ],
    "keyLine": "0_203",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/326/CWE416_Use_After_Free__malloc_free_long_04.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_79"
    ],
    "keyLine": "0_79",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/326/CWE416_Use_After_Free__malloc_free_long_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_126"
    ],
    "keyLine": "0_126",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/360/CWE416_Use_After_Free__malloc_free_struct_18.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/360/CWE416_Use_After_Free__malloc_free_struct_18.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_90",
      "0_91",
      "0_96",
      "0_97",
      "0_104"
    ],
    "keyLine": "0_90",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        0,
        4
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ],
      [
        3,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/360/CWE416_Use_After_Free__malloc_free_struct_18.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i].intOne = 1;\n",
      "            data[i].intTwo = 2;\n",
      "    printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_63",
      "0_68",
      "0_69",
      "0_73"
    ],
    "keyLine": "0_62",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ],
      [
        3,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/360/CWE416_Use_After_Free__malloc_free_struct_18.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i].intOne = 1;\n",
      "            data[i].intTwo = 2;\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        0,
        5
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ],
      [
        3,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/360/CWE416_Use_After_Free__malloc_free_struct_18.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i].intOne = 1;\n",
      "            data[i].intTwo = 2;\n",
      "    free(data);\n",
      "    printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/336/CWE416_Use_After_Free__malloc_free_long_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/336/CWE416_Use_After_Free__malloc_free_long_14.c"
    ],
    "nodes-line": [
      "    if(globalFive!=5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/336/CWE416_Use_After_Free__malloc_free_long_14.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/336/CWE416_Use_After_Free__malloc_free_long_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/336/CWE416_Use_After_Free__malloc_free_long_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/336/CWE416_Use_After_Free__malloc_free_long_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/312/CWE416_Use_After_Free__malloc_free_int_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/312/CWE416_Use_After_Free__malloc_free_int_10.c"
    ],
    "nodes-line": [
      "    if(globalFalse)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/312/CWE416_Use_After_Free__malloc_free_int_10.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/312/CWE416_Use_After_Free__malloc_free_int_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/312/CWE416_Use_After_Free__malloc_free_int_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/293/CWE416_Use_After_Free__malloc_free_int64_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/293/CWE416_Use_After_Free__malloc_free_int64_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsFalse())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/293/CWE416_Use_After_Free__malloc_free_int64_t_11.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/293/CWE416_Use_After_Free__malloc_free_int64_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/293/CWE416_Use_After_Free__malloc_free_int64_t_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_33",
      "0_42",
      "0_53"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/297/CWE416_Use_After_Free__malloc_free_int64_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_155",
      "0_162",
      "0_163",
      "0_178"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/297/CWE416_Use_After_Free__malloc_free_int64_t_15.c"
    ],
    "nodes-line": [
      "    switch(5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_194",
      "0_197",
      "0_198",
      "0_217"
    ],
    "keyLine": "0_197",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/297/CWE416_Use_After_Free__malloc_free_int64_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/297/CWE416_Use_After_Free__malloc_free_int64_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_73",
      "0_76",
      "0_77",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/297/CWE416_Use_After_Free__malloc_free_int64_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_247"
    ],
    "keyLine": "0_247",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/297/CWE416_Use_After_Free__malloc_free_int64_t_15.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_193"
    ],
    "keyLine": "0_193",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/314/CWE416_Use_After_Free__malloc_free_int_12.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_83",
      "0_99",
      "0_100",
      "0_105",
      "0_109"
    ],
    "keyLine": "0_99",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/314/CWE416_Use_After_Free__malloc_free_int_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_41"
    ],
    "keyLine": "0_41",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/314/CWE416_Use_After_Free__malloc_free_int_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135",
      "0_137",
      "0_138",
      "0_143",
      "0_164",
      "0_170"
    ],
    "keyLine": "0_137",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/314/CWE416_Use_After_Free__malloc_free_int_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN3 ( VAR1 [ 0 ] ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_45",
      "0_46",
      "0_51",
      "0_59"
    ],
    "keyLine": "0_45",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/314/CWE416_Use_After_Free__malloc_free_int_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_59"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/314/CWE416_Use_After_Free__malloc_free_int_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_33",
      "0_36",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        3
      ],
      [
        3,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/299/CWE416_Use_After_Free__malloc_free_int64_t_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_63",
      "0_65",
      "0_66",
      "0_69",
      "0_75"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        0
      ],
      [
        3,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/299/CWE416_Use_After_Free__malloc_free_int64_t_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_132"
    ],
    "keyLine": "0_132",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/299/CWE416_Use_After_Free__malloc_free_int64_t_17.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_36",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        0
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        2,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/299/CWE416_Use_After_Free__malloc_free_int64_t_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "            for(i = 0; i < 100; i++)\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_93",
      "0_95",
      "0_96",
      "0_109"
    ],
    "keyLine": "0_95",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/299/CWE416_Use_After_Free__malloc_free_int64_t_17.c"
    ],
    "nodes-line": [
      "    for(h = 0; h < 1; h++)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_162",
      "0_164",
      "0_165",
      "0_170",
      "0_178"
    ],
    "keyLine": "0_164",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/306/CWE416_Use_After_Free__malloc_free_int_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_70",
      "0_75",
      "0_79"
    ],
    "keyLine": "0_69",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/306/CWE416_Use_After_Free__malloc_free_int_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_43",
      "0_47",
      "0_52"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/306/CWE416_Use_After_Free__malloc_free_int_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_203"
    ],
    "keyLine": "0_203",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/306/CWE416_Use_After_Free__malloc_free_int_04.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_79"
    ],
    "keyLine": "0_79",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/306/CWE416_Use_After_Free__malloc_free_int_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/345/CWE416_Use_After_Free__malloc_free_struct_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/345/CWE416_Use_After_Free__malloc_free_struct_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_127",
      "0_134",
      "0_135",
      "0_140",
      "0_141",
      "0_149"
    ],
    "keyLine": "0_134",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/345/CWE416_Use_After_Free__malloc_free_struct_03.c"
    ],
    "nodes-line": [
      "    if(5!=5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 != 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/345/CWE416_Use_After_Free__malloc_free_struct_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/345/CWE416_Use_After_Free__malloc_free_struct_03.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/345/CWE416_Use_After_Free__malloc_free_struct_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_122",
      "0_129",
      "0_130",
      "0_138"
    ],
    "keyLine": "0_129",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/370/CWE416_Use_After_Free__malloc_free_wchar_t_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsFalse())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "FUN3 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_98",
      "0_100",
      "0_101",
      "0_105"
    ],
    "keyLine": "0_100",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/370/CWE416_Use_After_Free__malloc_free_wchar_t_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_98",
      "0_100",
      "0_105"
    ],
    "keyLine": "0_105",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/370/CWE416_Use_After_Free__malloc_free_wchar_t_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_42",
      "0_44",
      "0_45",
      "0_49",
      "0_54"
    ],
    "keyLine": "0_44",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/370/CWE416_Use_After_Free__malloc_free_wchar_t_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_185"
    ],
    "keyLine": "0_185",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/370/CWE416_Use_After_Free__malloc_free_wchar_t_08.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_33",
      "0_38",
      "0_42",
      "0_53"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/337/CWE416_Use_After_Free__malloc_free_long_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_155",
      "0_162",
      "0_163",
      "0_168",
      "0_178"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/337/CWE416_Use_After_Free__malloc_free_long_15.c"
    ],
    "nodes-line": [
      "    switch(5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 5 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_194",
      "0_197",
      "0_198",
      "0_203",
      "0_217"
    ],
    "keyLine": "0_197",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/337/CWE416_Use_After_Free__malloc_free_long_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/337/CWE416_Use_After_Free__malloc_free_long_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_73",
      "0_76",
      "0_77",
      "0_82",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/337/CWE416_Use_After_Free__malloc_free_long_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_247"
    ],
    "keyLine": "0_247",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/337/CWE416_Use_After_Free__malloc_free_long_15.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/388/CWE416_Use_After_Free__return_freed_ptr_06.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/388/CWE416_Use_After_Free__return_freed_ptr_06.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/388/CWE416_Use_After_Free__return_freed_ptr_06.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_151"
    ],
    "keyLine": "0_151",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/388/CWE416_Use_After_Free__return_freed_ptr_06.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/388/CWE416_Use_After_Free__return_freed_ptr_06.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/388/CWE416_Use_After_Free__return_freed_ptr_06.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_98"
    ],
    "keyLine": "0_98",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/354/CWE416_Use_After_Free__malloc_free_struct_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_102",
      "0_103",
      "0_108",
      "0_109",
      "0_113"
    ],
    "keyLine": "0_102",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/354/CWE416_Use_After_Free__malloc_free_struct_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_199"
    ],
    "keyLine": "0_199",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/354/CWE416_Use_After_Free__malloc_free_struct_12.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_139",
      "0_141",
      "0_142",
      "0_147",
      "0_148",
      "0_170",
      "0_176"
    ],
    "keyLine": "0_141",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        6
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/354/CWE416_Use_After_Free__malloc_free_struct_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_46",
      "0_47",
      "0_52",
      "0_53",
      "0_61"
    ],
    "keyLine": "0_46",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/354/CWE416_Use_After_Free__malloc_free_struct_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_61"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/354/CWE416_Use_After_Free__malloc_free_struct_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_40"
    ],
    "keyLine": "0_40",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/343/CWE416_Use_After_Free__malloc_free_struct_01.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_78",
      "0_79",
      "0_84",
      "0_85",
      "0_89"
    ],
    "keyLine": "0_78",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ],
      [
        3,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/343/CWE416_Use_After_Free__malloc_free_struct_01.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i].intOne = 1;\n",
      "            data[i].intTwo = 2;\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_114"
    ],
    "keyLine": "0_114",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/343/CWE416_Use_After_Free__malloc_free_struct_01.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_56",
      "0_57",
      "0_62",
      "0_63",
      "0_68"
    ],
    "keyLine": "0_56",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ],
      [
        3,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/343/CWE416_Use_After_Free__malloc_free_struct_01.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i].intOne = 1;\n",
      "            data[i].intTwo = 2;\n",
      "    printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_30",
      "0_35",
      "0_36",
      "0_40",
      "0_42"
    ],
    "keyLine": "0_29",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ],
      [
        3,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/343/CWE416_Use_After_Free__malloc_free_struct_01.c"
    ],
    "nodes-line": [
      "    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i].intOne = 1;\n",
      "            data[i].intTwo = 2;\n",
      "    free(data);\n",
      "    printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/295/CWE416_Use_After_Free__malloc_free_int64_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/295/CWE416_Use_After_Free__malloc_free_int64_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE!=5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/295/CWE416_Use_After_Free__malloc_free_int64_t_13.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/295/CWE416_Use_After_Free__malloc_free_int64_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/295/CWE416_Use_After_Free__malloc_free_int64_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/295/CWE416_Use_After_Free__malloc_free_int64_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_162",
      "0_164",
      "0_165",
      "0_170",
      "0_178"
    ],
    "keyLine": "0_164",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/327/CWE416_Use_After_Free__malloc_free_long_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_70",
      "0_75",
      "0_79"
    ],
    "keyLine": "0_69",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/327/CWE416_Use_After_Free__malloc_free_long_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_43",
      "0_47",
      "0_52"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/327/CWE416_Use_After_Free__malloc_free_long_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_203"
    ],
    "keyLine": "0_203",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/327/CWE416_Use_After_Free__malloc_free_long_05.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_79"
    ],
    "keyLine": "0_79",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/327/CWE416_Use_After_Free__malloc_free_long_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/311/CWE416_Use_After_Free__malloc_free_int_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/311/CWE416_Use_After_Free__malloc_free_int_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FALSE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/311/CWE416_Use_After_Free__malloc_free_int_09.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/311/CWE416_Use_After_Free__malloc_free_int_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/311/CWE416_Use_After_Free__malloc_free_int_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/333/CWE416_Use_After_Free__malloc_free_long_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/333/CWE416_Use_After_Free__malloc_free_long_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsFalse())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/333/CWE416_Use_After_Free__malloc_free_long_11.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/333/CWE416_Use_After_Free__malloc_free_long_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/333/CWE416_Use_After_Free__malloc_free_long_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_152"
    ],
    "keyLine": "0_152",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/387/CWE416_Use_After_Free__return_freed_ptr_05.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/313/CWE416_Use_After_Free__malloc_free_int_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/313/CWE416_Use_After_Free__malloc_free_int_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsFalse())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/313/CWE416_Use_After_Free__malloc_free_int_11.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/313/CWE416_Use_After_Free__malloc_free_int_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/313/CWE416_Use_After_Free__malloc_free_int_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_71"
    ],
    "keyLine": "0_71",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/300/CWE416_Use_After_Free__malloc_free_int64_t_18.c"
    ],
    "nodes-line": [
      "    data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_88",
      "0_89",
      "0_101"
    ],
    "keyLine": "0_88",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/300/CWE416_Use_After_Free__malloc_free_int64_t_18.c"
    ],
    "nodes-line": [
      "    data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_123"
    ],
    "keyLine": "0_123",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/300/CWE416_Use_After_Free__malloc_free_int64_t_18.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_62",
      "0_71"
    ],
    "keyLine": "0_61",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/300/CWE416_Use_After_Free__malloc_free_int64_t_18.c"
    ],
    "nodes-line": [
      "    data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_31",
      "0_32",
      "0_41",
      "0_45"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/300/CWE416_Use_After_Free__malloc_free_int64_t_18.c"
    ],
    "nodes-line": [
      "    data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    free(data);\n",
      "    printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_94",
      "0_96",
      "0_97",
      "0_102",
      "0_111"
    ],
    "keyLine": "0_96",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/318/CWE416_Use_After_Free__malloc_free_int_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_63",
      "0_65",
      "0_66",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/318/CWE416_Use_After_Free__malloc_free_int_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135"
    ],
    "keyLine": "0_135",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/318/CWE416_Use_After_Free__malloc_free_int_16.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_41"
    ],
    "keyLine": "0_41",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/318/CWE416_Use_After_Free__malloc_free_int_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/318/CWE416_Use_After_Free__malloc_free_int_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/352/CWE416_Use_After_Free__malloc_free_struct_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/352/CWE416_Use_After_Free__malloc_free_struct_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/352/CWE416_Use_After_Free__malloc_free_struct_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/352/CWE416_Use_After_Free__malloc_free_struct_10.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/352/CWE416_Use_After_Free__malloc_free_struct_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/395/CWE416_Use_After_Free__return_freed_ptr_13.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/351/CWE416_Use_After_Free__malloc_free_struct_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/351/CWE416_Use_After_Free__malloc_free_struct_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/351/CWE416_Use_After_Free__malloc_free_struct_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/351/CWE416_Use_After_Free__malloc_free_struct_09.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/351/CWE416_Use_After_Free__malloc_free_struct_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/316/CWE416_Use_After_Free__malloc_free_int_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/316/CWE416_Use_After_Free__malloc_free_int_14.c"
    ],
    "nodes-line": [
      "    if(globalFive!=5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/316/CWE416_Use_After_Free__malloc_free_int_14.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/316/CWE416_Use_After_Free__malloc_free_int_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/316/CWE416_Use_After_Free__malloc_free_int_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/316/CWE416_Use_After_Free__malloc_free_int_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/355/CWE416_Use_After_Free__malloc_free_struct_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/355/CWE416_Use_After_Free__malloc_free_struct_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_127",
      "0_134",
      "0_135",
      "0_140",
      "0_141",
      "0_149"
    ],
    "keyLine": "0_134",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/355/CWE416_Use_After_Free__malloc_free_struct_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE!=5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/355/CWE416_Use_After_Free__malloc_free_struct_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/355/CWE416_Use_After_Free__malloc_free_struct_13.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/355/CWE416_Use_After_Free__malloc_free_struct_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/296/CWE416_Use_After_Free__malloc_free_int64_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/296/CWE416_Use_After_Free__malloc_free_int64_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive!=5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/296/CWE416_Use_After_Free__malloc_free_int64_t_14.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/296/CWE416_Use_After_Free__malloc_free_int64_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/296/CWE416_Use_After_Free__malloc_free_int64_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/296/CWE416_Use_After_Free__malloc_free_int64_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_169",
      "0_171",
      "0_172",
      "0_177",
      "0_185"
    ],
    "keyLine": "0_171",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/310/CWE416_Use_After_Free__malloc_free_int_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_42",
      "0_44",
      "0_45",
      "0_50",
      "0_54",
      "0_59"
    ],
    "keyLine": "0_44",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/310/CWE416_Use_After_Free__malloc_free_int_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_74",
      "0_76",
      "0_77",
      "0_82",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/310/CWE416_Use_After_Free__malloc_free_int_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_210"
    ],
    "keyLine": "0_210",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/310/CWE416_Use_After_Free__malloc_free_int_08.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_74",
      "0_76",
      "0_86"
    ],
    "keyLine": "0_86",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/310/CWE416_Use_After_Free__malloc_free_int_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_161",
      "0_163",
      "0_164",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_163",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/308/CWE416_Use_After_Free__malloc_free_int_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_42",
      "0_46",
      "0_51"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/308/CWE416_Use_After_Free__malloc_free_int_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_69",
      "0_74",
      "0_78"
    ],
    "keyLine": "0_68",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/308/CWE416_Use_After_Free__malloc_free_int_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_129",
      "0_136",
      "0_137",
      "0_142",
      "0_150"
    ],
    "keyLine": "0_136",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/308/CWE416_Use_After_Free__malloc_free_int_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE!=5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/308/CWE416_Use_After_Free__malloc_free_int_06.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_78"
    ],
    "keyLine": "0_78",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/308/CWE416_Use_After_Free__malloc_free_int_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/391/CWE416_Use_After_Free__return_freed_ptr_09.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/384/CWE416_Use_After_Free__return_freed_ptr_02.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/384/CWE416_Use_After_Free__return_freed_ptr_02.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/384/CWE416_Use_After_Free__return_freed_ptr_02.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/384/CWE416_Use_After_Free__return_freed_ptr_02.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/384/CWE416_Use_After_Free__return_freed_ptr_02.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/384/CWE416_Use_After_Free__return_freed_ptr_02.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/325/CWE416_Use_After_Free__malloc_free_long_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/325/CWE416_Use_After_Free__malloc_free_long_03.c"
    ],
    "nodes-line": [
      "    if(5!=5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 != 5 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/325/CWE416_Use_After_Free__malloc_free_long_03.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/325/CWE416_Use_After_Free__malloc_free_long_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/325/CWE416_Use_After_Free__malloc_free_long_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/325/CWE416_Use_After_Free__malloc_free_long_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/371/CWE416_Use_After_Free__malloc_free_wchar_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/371/CWE416_Use_After_Free__malloc_free_wchar_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/371/CWE416_Use_After_Free__malloc_free_wchar_t_09.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/371/CWE416_Use_After_Free__malloc_free_wchar_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/371/CWE416_Use_After_Free__malloc_free_wchar_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/291/CWE416_Use_After_Free__malloc_free_int64_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/291/CWE416_Use_After_Free__malloc_free_int64_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FALSE)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/291/CWE416_Use_After_Free__malloc_free_int64_t_09.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/291/CWE416_Use_After_Free__malloc_free_int64_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/291/CWE416_Use_After_Free__malloc_free_int64_t_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/394/CWE416_Use_After_Free__return_freed_ptr_12.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/394/CWE416_Use_After_Free__return_freed_ptr_12.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/394/CWE416_Use_After_Free__return_freed_ptr_12.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_147"
    ],
    "keyLine": "0_147",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/394/CWE416_Use_After_Free__return_freed_ptr_12.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/394/CWE416_Use_After_Free__return_freed_ptr_12.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/394/CWE416_Use_After_Free__return_freed_ptr_12.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_121"
    ],
    "keyLine": "0_121",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/400/CWE416_Use_After_Free__return_freed_ptr_18.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/400/CWE416_Use_After_Free__return_freed_ptr_18.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/400/CWE416_Use_After_Free__return_freed_ptr_18.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/400/CWE416_Use_After_Free__return_freed_ptr_18.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/400/CWE416_Use_After_Free__return_freed_ptr_18.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/400/CWE416_Use_After_Free__return_freed_ptr_18.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_33",
      "0_37",
      "0_48"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/377/CWE416_Use_After_Free__malloc_free_wchar_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_37"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/377/CWE416_Use_After_Free__malloc_free_wchar_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_68",
      "0_71",
      "0_72",
      "0_76"
    ],
    "keyLine": "0_71",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/377/CWE416_Use_After_Free__malloc_free_wchar_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_174",
      "0_177",
      "0_178",
      "0_192"
    ],
    "keyLine": "0_177",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/377/CWE416_Use_After_Free__malloc_free_wchar_t_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_140",
      "0_147",
      "0_148",
      "0_158"
    ],
    "keyLine": "0_147",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/377/CWE416_Use_After_Free__malloc_free_wchar_t_15.c"
    ],
    "nodes-line": [
      "    switch(5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 5 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_222"
    ],
    "keyLine": "0_222",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/377/CWE416_Use_After_Free__malloc_free_wchar_t_15.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/375/CWE416_Use_After_Free__malloc_free_wchar_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/375/CWE416_Use_After_Free__malloc_free_wchar_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/375/CWE416_Use_After_Free__malloc_free_wchar_t_13.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_109",
      "0_116",
      "0_117",
      "0_125"
    ],
    "keyLine": "0_116",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/375/CWE416_Use_After_Free__malloc_free_wchar_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE!=5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/375/CWE416_Use_After_Free__malloc_free_wchar_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/375/CWE416_Use_After_Free__malloc_free_wchar_t_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/356/CWE416_Use_After_Free__malloc_free_struct_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/356/CWE416_Use_After_Free__malloc_free_struct_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_127",
      "0_134",
      "0_135",
      "0_140",
      "0_141",
      "0_149"
    ],
    "keyLine": "0_134",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/356/CWE416_Use_After_Free__malloc_free_struct_14.c"
    ],
    "nodes-line": [
      "    if(globalFive!=5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/356/CWE416_Use_After_Free__malloc_free_struct_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/356/CWE416_Use_After_Free__malloc_free_struct_14.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/356/CWE416_Use_After_Free__malloc_free_struct_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_163"
    ],
    "keyLine": "0_163",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/374/CWE416_Use_After_Free__malloc_free_wchar_t_12.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/374/CWE416_Use_After_Free__malloc_free_wchar_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_40",
      "0_41",
      "0_49"
    ],
    "keyLine": "0_40",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/374/CWE416_Use_After_Free__malloc_free_wchar_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "FUN3 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_73",
      "0_75",
      "0_76",
      "0_80"
    ],
    "keyLine": "0_75",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/374/CWE416_Use_After_Free__malloc_free_wchar_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_134",
      "0_140",
      "0_115",
      "0_117",
      "0_118"
    ],
    "keyLine": "0_117",
    "edges-No": [
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        0
      ],
      [
        3,
        1
      ],
      [
        3,
        4
      ],
      [
        4,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/374/CWE416_Use_After_Free__malloc_free_wchar_t_12.c"
    ],
    "nodes-line": [
      "        printWLine(data);\n",
      "        printWLine(data);\n",
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n"
    ],
    "nodes-line-sym": [
      "FUN1 ( VAR1 ) ;",
      "FUN1 ( VAR1 ) ;",
      "if ( FUN2 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN3 ( - 1 ) ; }"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_49"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/374/CWE416_Use_After_Free__malloc_free_wchar_t_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_43",
      "0_44",
      "0_48",
      "0_53"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/347/CWE416_Use_After_Free__malloc_free_struct_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_68",
      "0_70",
      "0_71",
      "0_76",
      "0_77",
      "0_81"
    ],
    "keyLine": "0_70",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/347/CWE416_Use_After_Free__malloc_free_struct_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_166",
      "0_168",
      "0_169",
      "0_174",
      "0_175",
      "0_183"
    ],
    "keyLine": "0_168",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/347/CWE416_Use_After_Free__malloc_free_struct_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_48"
    ],
    "keyLine": "0_48",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/347/CWE416_Use_After_Free__malloc_free_struct_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_208"
    ],
    "keyLine": "0_208",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/347/CWE416_Use_After_Free__malloc_free_struct_05.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/383/CWE416_Use_After_Free__return_freed_ptr_01.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/383/CWE416_Use_After_Free__return_freed_ptr_01.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/383/CWE416_Use_After_Free__return_freed_ptr_01.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_116"
    ],
    "keyLine": "0_116",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/383/CWE416_Use_After_Free__return_freed_ptr_01.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/383/CWE416_Use_After_Free__return_freed_ptr_01.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/383/CWE416_Use_After_Free__return_freed_ptr_01.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_69"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/367/CWE416_Use_After_Free__malloc_free_wchar_t_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_91",
      "0_93",
      "0_98"
    ],
    "keyLine": "0_98",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/367/CWE416_Use_After_Free__malloc_free_wchar_t_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/367/CWE416_Use_After_Free__malloc_free_wchar_t_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_142",
      "0_144",
      "0_145",
      "0_153"
    ],
    "keyLine": "0_144",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/367/CWE416_Use_After_Free__malloc_free_wchar_t_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_178"
    ],
    "keyLine": "0_178",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/367/CWE416_Use_After_Free__malloc_free_wchar_t_05.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/365/CWE416_Use_After_Free__malloc_free_wchar_t_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/365/CWE416_Use_After_Free__malloc_free_wchar_t_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/365/CWE416_Use_After_Free__malloc_free_wchar_t_03.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_109",
      "0_116",
      "0_117",
      "0_125"
    ],
    "keyLine": "0_116",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/365/CWE416_Use_After_Free__malloc_free_wchar_t_03.c"
    ],
    "nodes-line": [
      "    if(5!=5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 != 5 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/365/CWE416_Use_After_Free__malloc_free_wchar_t_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/365/CWE416_Use_After_Free__malloc_free_wchar_t_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_33",
      "0_37",
      "0_42"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/379/CWE416_Use_After_Free__malloc_free_wchar_t_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_58",
      "0_60",
      "0_65"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/379/CWE416_Use_After_Free__malloc_free_wchar_t_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_83",
      "0_85",
      "0_86",
      "0_94"
    ],
    "keyLine": "0_85",
    "edges-No": [
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/379/CWE416_Use_After_Free__malloc_free_wchar_t_17.c"
    ],
    "nodes-line": [
      "    for(h = 0; h < 1; h++)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_117"
    ],
    "keyLine": "0_117",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/379/CWE416_Use_After_Free__malloc_free_wchar_t_17.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_58",
      "0_60",
      "0_61",
      "0_65"
    ],
    "keyLine": "0_60",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/379/CWE416_Use_After_Free__malloc_free_wchar_t_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/324/CWE416_Use_After_Free__malloc_free_long_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/324/CWE416_Use_After_Free__malloc_free_long_02.c"
    ],
    "nodes-line": [
      "    if(0)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 0 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/324/CWE416_Use_After_Free__malloc_free_long_02.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/324/CWE416_Use_After_Free__malloc_free_long_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/324/CWE416_Use_After_Free__malloc_free_long_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/324/CWE416_Use_After_Free__malloc_free_long_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/398/CWE416_Use_After_Free__return_freed_ptr_16.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/398/CWE416_Use_After_Free__return_freed_ptr_16.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/398/CWE416_Use_After_Free__return_freed_ptr_16.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/398/CWE416_Use_After_Free__return_freed_ptr_16.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/398/CWE416_Use_After_Free__return_freed_ptr_16.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_125"
    ],
    "keyLine": "0_125",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/398/CWE416_Use_After_Free__return_freed_ptr_16.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_39"
    ],
    "keyLine": "0_39",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/303/CWE416_Use_After_Free__malloc_free_int_01.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_76",
      "0_77",
      "0_82",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/303/CWE416_Use_After_Free__malloc_free_int_01.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5;\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_111"
    ],
    "keyLine": "0_111",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/303/CWE416_Use_After_Free__malloc_free_int_01.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_55",
      "0_56",
      "0_61",
      "0_66"
    ],
    "keyLine": "0_55",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/303/CWE416_Use_After_Free__malloc_free_int_01.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5;\n",
      "    printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_30",
      "0_35",
      "0_39",
      "0_41"
    ],
    "keyLine": "0_29",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ],
      [
        2,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/303/CWE416_Use_After_Free__malloc_free_int_01.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5;\n",
      "    free(data);\n",
      "    printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_193"
    ],
    "keyLine": "0_193",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/334/CWE416_Use_After_Free__malloc_free_long_12.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_83",
      "0_99",
      "0_100",
      "0_105",
      "0_109"
    ],
    "keyLine": "0_99",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/334/CWE416_Use_After_Free__malloc_free_long_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_41"
    ],
    "keyLine": "0_41",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/334/CWE416_Use_After_Free__malloc_free_long_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135",
      "0_137",
      "0_138",
      "0_143",
      "0_164",
      "0_170"
    ],
    "keyLine": "0_137",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/334/CWE416_Use_After_Free__malloc_free_long_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN3 ( VAR1 [ 0 ] ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_45",
      "0_46",
      "0_51",
      "0_59"
    ],
    "keyLine": "0_45",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/334/CWE416_Use_After_Free__malloc_free_long_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_59"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/334/CWE416_Use_After_Free__malloc_free_long_12.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrueOrFalse())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_64",
      "0_66",
      "0_67",
      "0_72",
      "0_73",
      "0_77"
    ],
    "keyLine": "0_66",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/358/CWE416_Use_After_Free__malloc_free_struct_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_96",
      "0_98",
      "0_99",
      "0_104",
      "0_105",
      "0_114"
    ],
    "keyLine": "0_98",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/358/CWE416_Use_After_Free__malloc_free_struct_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/358/CWE416_Use_After_Free__malloc_free_struct_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_138"
    ],
    "keyLine": "0_138",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/358/CWE416_Use_After_Free__malloc_free_struct_16.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_48"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        6
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/358/CWE416_Use_After_Free__malloc_free_struct_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_161",
      "0_163",
      "0_164",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_163",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/329/CWE416_Use_After_Free__malloc_free_long_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_42",
      "0_46",
      "0_51"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/329/CWE416_Use_After_Free__malloc_free_long_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_69",
      "0_74",
      "0_78"
    ],
    "keyLine": "0_68",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/329/CWE416_Use_After_Free__malloc_free_long_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_129",
      "0_136",
      "0_137",
      "0_142",
      "0_150"
    ],
    "keyLine": "0_136",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/329/CWE416_Use_After_Free__malloc_free_long_07.c"
    ],
    "nodes-line": [
      "    if(staticFive!=5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/329/CWE416_Use_After_Free__malloc_free_long_07.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_78"
    ],
    "keyLine": "0_78",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/329/CWE416_Use_After_Free__malloc_free_long_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/353/CWE416_Use_After_Free__malloc_free_struct_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/353/CWE416_Use_After_Free__malloc_free_struct_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/353/CWE416_Use_After_Free__malloc_free_struct_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/353/CWE416_Use_After_Free__malloc_free_struct_11.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/353/CWE416_Use_After_Free__malloc_free_struct_11.c"
    ],
    "nodes-line": [
      "    if(globalReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/304/CWE416_Use_After_Free__malloc_free_int_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/304/CWE416_Use_After_Free__malloc_free_int_02.c"
    ],
    "nodes-line": [
      "    if(0)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 0 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/304/CWE416_Use_After_Free__malloc_free_int_02.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/304/CWE416_Use_After_Free__malloc_free_int_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/304/CWE416_Use_After_Free__malloc_free_int_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/304/CWE416_Use_After_Free__malloc_free_int_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_42",
      "0_43",
      "0_47",
      "0_52"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/348/CWE416_Use_After_Free__malloc_free_struct_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_70",
      "0_75",
      "0_76",
      "0_80"
    ],
    "keyLine": "0_69",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/348/CWE416_Use_After_Free__malloc_free_struct_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_165",
      "0_167",
      "0_168",
      "0_173",
      "0_174",
      "0_182"
    ],
    "keyLine": "0_167",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/348/CWE416_Use_After_Free__malloc_free_struct_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_132",
      "0_139",
      "0_140",
      "0_145",
      "0_146",
      "0_154"
    ],
    "keyLine": "0_139",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/348/CWE416_Use_After_Free__malloc_free_struct_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE!=5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_47"
    ],
    "keyLine": "0_47",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/348/CWE416_Use_After_Free__malloc_free_struct_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_207"
    ],
    "keyLine": "0_207",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/348/CWE416_Use_After_Free__malloc_free_struct_06.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_39"
    ],
    "keyLine": "0_39",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/323/CWE416_Use_After_Free__malloc_free_long_01.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_76",
      "0_77",
      "0_82",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/323/CWE416_Use_After_Free__malloc_free_long_01.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5L;\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_111"
    ],
    "keyLine": "0_111",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/323/CWE416_Use_After_Free__malloc_free_long_01.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_55",
      "0_56",
      "0_61",
      "0_66"
    ],
    "keyLine": "0_55",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/323/CWE416_Use_After_Free__malloc_free_long_01.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5L;\n",
      "    printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_30",
      "0_35",
      "0_39",
      "0_41"
    ],
    "keyLine": "0_29",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ],
      [
        2,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/323/CWE416_Use_After_Free__malloc_free_long_01.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5L;\n",
      "    free(data);\n",
      "    printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_33",
      "0_38",
      "0_42",
      "0_53"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/317/CWE416_Use_After_Free__malloc_free_int_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_155",
      "0_162",
      "0_163",
      "0_168",
      "0_178"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/317/CWE416_Use_After_Free__malloc_free_int_15.c"
    ],
    "nodes-line": [
      "    switch(5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 5 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_194",
      "0_197",
      "0_198",
      "0_203",
      "0_217"
    ],
    "keyLine": "0_197",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/317/CWE416_Use_After_Free__malloc_free_int_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/317/CWE416_Use_After_Free__malloc_free_int_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_73",
      "0_76",
      "0_77",
      "0_82",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/317/CWE416_Use_After_Free__malloc_free_int_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_247"
    ],
    "keyLine": "0_247",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/317/CWE416_Use_After_Free__malloc_free_int_15.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_71"
    ],
    "keyLine": "0_71",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/340/CWE416_Use_After_Free__malloc_free_long_18.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_88",
      "0_89",
      "0_94",
      "0_101"
    ],
    "keyLine": "0_88",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/340/CWE416_Use_After_Free__malloc_free_long_18.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5L;\n",
      "    printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_123"
    ],
    "keyLine": "0_123",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/340/CWE416_Use_After_Free__malloc_free_long_18.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_62",
      "0_67",
      "0_71"
    ],
    "keyLine": "0_61",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/340/CWE416_Use_After_Free__malloc_free_long_18.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5L;\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_45"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ],
      [
        2,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/340/CWE416_Use_After_Free__malloc_free_long_18.c"
    ],
    "nodes-line": [
      "    data = (long *)malloc(100*sizeof(long));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5L;\n",
      "    free(data);\n",
      "    printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/335/CWE416_Use_After_Free__malloc_free_long_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/335/CWE416_Use_After_Free__malloc_free_long_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE!=5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/335/CWE416_Use_After_Free__malloc_free_long_13.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/335/CWE416_Use_After_Free__malloc_free_long_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/335/CWE416_Use_After_Free__malloc_free_long_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/335/CWE416_Use_After_Free__malloc_free_long_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/364/CWE416_Use_After_Free__malloc_free_wchar_t_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/364/CWE416_Use_After_Free__malloc_free_wchar_t_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/364/CWE416_Use_After_Free__malloc_free_wchar_t_02.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_109",
      "0_116",
      "0_117",
      "0_125"
    ],
    "keyLine": "0_116",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/364/CWE416_Use_After_Free__malloc_free_wchar_t_02.c"
    ],
    "nodes-line": [
      "    if(0)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 0 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/364/CWE416_Use_After_Free__malloc_free_wchar_t_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/364/CWE416_Use_After_Free__malloc_free_wchar_t_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_161",
      "0_163",
      "0_164",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_163",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/328/CWE416_Use_After_Free__malloc_free_long_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_42",
      "0_46",
      "0_51"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/328/CWE416_Use_After_Free__malloc_free_long_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_69",
      "0_74",
      "0_78"
    ],
    "keyLine": "0_68",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/328/CWE416_Use_After_Free__malloc_free_long_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_129",
      "0_136",
      "0_137",
      "0_142",
      "0_150"
    ],
    "keyLine": "0_136",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/328/CWE416_Use_After_Free__malloc_free_long_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE!=5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/328/CWE416_Use_After_Free__malloc_free_long_06.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_68",
      "0_78"
    ],
    "keyLine": "0_78",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/328/CWE416_Use_After_Free__malloc_free_long_06.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_FIVE==5)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_69"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/366/CWE416_Use_After_Free__malloc_free_wchar_t_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_91",
      "0_93",
      "0_98"
    ],
    "keyLine": "0_98",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/366/CWE416_Use_After_Free__malloc_free_wchar_t_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/366/CWE416_Use_After_Free__malloc_free_wchar_t_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_142",
      "0_144",
      "0_145",
      "0_153"
    ],
    "keyLine": "0_144",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/366/CWE416_Use_After_Free__malloc_free_wchar_t_04.c"
    ],
    "nodes-line": [
      "    if(STATIC_CONST_TRUE)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_178"
    ],
    "keyLine": "0_178",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/366/CWE416_Use_After_Free__malloc_free_wchar_t_04.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/380/CWE416_Use_After_Free__malloc_free_wchar_t_18.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_108"
    ],
    "keyLine": "0_108",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/380/CWE416_Use_After_Free__malloc_free_wchar_t_18.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_78",
      "0_79",
      "0_86"
    ],
    "keyLine": "0_78",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/380/CWE416_Use_After_Free__malloc_free_wchar_t_18.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_56",
      "0_57",
      "0_61"
    ],
    "keyLine": "0_56",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/380/CWE416_Use_After_Free__malloc_free_wchar_t_18.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_31",
      "0_32",
      "0_36",
      "0_40"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/380/CWE416_Use_After_Free__malloc_free_wchar_t_18.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    free(data);\n",
      "    printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_33",
      "0_36",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        5
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        4
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        0
      ],
      [
        4,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/319/CWE416_Use_After_Free__malloc_free_int_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "VAR2 [ VAR1 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_63",
      "0_65",
      "0_66",
      "0_69",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        5
      ],
      [
        0,
        0
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/319/CWE416_Use_After_Free__malloc_free_int_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "VAR2 [ VAR1 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_132"
    ],
    "keyLine": "0_132",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/319/CWE416_Use_After_Free__malloc_free_int_17.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_36",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        0
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        2,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/319/CWE416_Use_After_Free__malloc_free_int_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "            for(i = 0; i < 100; i++)\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_93",
      "0_95",
      "0_96",
      "0_101",
      "0_109"
    ],
    "keyLine": "0_95",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/319/CWE416_Use_After_Free__malloc_free_int_17.c"
    ],
    "nodes-line": [
      "    for(h = 0; h < 1; h++)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_58",
      "0_60",
      "0_65"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/378/CWE416_Use_After_Free__malloc_free_wchar_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_84",
      "0_86",
      "0_87",
      "0_96"
    ],
    "keyLine": "0_86",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/378/CWE416_Use_After_Free__malloc_free_wchar_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_120"
    ],
    "keyLine": "0_120",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/378/CWE416_Use_After_Free__malloc_free_wchar_t_16.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_58",
      "0_60",
      "0_61",
      "0_65"
    ],
    "keyLine": "0_60",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/378/CWE416_Use_After_Free__malloc_free_wchar_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_42"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/378/CWE416_Use_After_Free__malloc_free_wchar_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/331/CWE416_Use_After_Free__malloc_free_long_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/331/CWE416_Use_After_Free__malloc_free_long_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FALSE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/331/CWE416_Use_After_Free__malloc_free_long_09.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/331/CWE416_Use_After_Free__malloc_free_long_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/331/CWE416_Use_After_Free__malloc_free_long_09.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_TRUE)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5L ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_94",
      "0_96",
      "0_97",
      "0_102",
      "0_111"
    ],
    "keyLine": "0_96",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/338/CWE416_Use_After_Free__malloc_free_long_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_63",
      "0_65",
      "0_66",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/338/CWE416_Use_After_Free__malloc_free_long_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135"
    ],
    "keyLine": "0_135",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/338/CWE416_Use_After_Free__malloc_free_long_16.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_41"
    ],
    "keyLine": "0_41",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/338/CWE416_Use_After_Free__malloc_free_long_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/338/CWE416_Use_After_Free__malloc_free_long_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_94",
      "0_96",
      "0_97",
      "0_111"
    ],
    "keyLine": "0_96",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/298/CWE416_Use_After_Free__malloc_free_int64_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_63",
      "0_65",
      "0_66",
      "0_75"
    ],
    "keyLine": "0_65",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/298/CWE416_Use_After_Free__malloc_free_int64_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135"
    ],
    "keyLine": "0_135",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/298/CWE416_Use_After_Free__malloc_free_int64_t_16.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_41"
    ],
    "keyLine": "0_41",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/298/CWE416_Use_After_Free__malloc_free_int64_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/298/CWE416_Use_After_Free__malloc_free_int64_t_16.c"
    ],
    "nodes-line": [
      "    while(1)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "while ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_32",
      "0_33",
      "0_38",
      "0_39",
      "0_43",
      "0_54"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        6
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/357/CWE416_Use_After_Free__malloc_free_struct_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_116",
      "0_119",
      "0_130"
    ],
    "keyLine": "0_130",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/357/CWE416_Use_After_Free__malloc_free_struct_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_158",
      "0_165",
      "0_166",
      "0_171",
      "0_172",
      "0_182"
    ],
    "keyLine": "0_165",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/357/CWE416_Use_After_Free__malloc_free_struct_15.c"
    ],
    "nodes-line": [
      "    switch(5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 5 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_198",
      "0_201",
      "0_202",
      "0_207",
      "0_208",
      "0_222"
    ],
    "keyLine": "0_201",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/357/CWE416_Use_After_Free__malloc_free_struct_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_74",
      "0_77",
      "0_78",
      "0_83",
      "0_84",
      "0_88"
    ],
    "keyLine": "0_77",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/357/CWE416_Use_After_Free__malloc_free_struct_15.c"
    ],
    "nodes-line": [
      "    switch(6)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "switch ( 6 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_252"
    ],
    "keyLine": "0_252",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/357/CWE416_Use_After_Free__malloc_free_struct_15.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_42",
      "0_44",
      "0_45",
      "0_50",
      "0_51",
      "0_55",
      "0_60"
    ],
    "keyLine": "0_44",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/350/CWE416_Use_After_Free__malloc_free_struct_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_75",
      "0_77",
      "0_78",
      "0_83",
      "0_84",
      "0_88"
    ],
    "keyLine": "0_77",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/350/CWE416_Use_After_Free__malloc_free_struct_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_173",
      "0_175",
      "0_176",
      "0_181",
      "0_182",
      "0_190"
    ],
    "keyLine": "0_175",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/350/CWE416_Use_After_Free__malloc_free_struct_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN3 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_42",
      "0_44",
      "0_55"
    ],
    "keyLine": "0_55",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/350/CWE416_Use_After_Free__malloc_free_struct_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_215"
    ],
    "keyLine": "0_215",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/350/CWE416_Use_After_Free__malloc_free_struct_08.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/389/CWE416_Use_After_Free__return_freed_ptr_07.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/389/CWE416_Use_After_Free__return_freed_ptr_07.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/389/CWE416_Use_After_Free__return_freed_ptr_07.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_151"
    ],
    "keyLine": "0_151",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/389/CWE416_Use_After_Free__return_freed_ptr_07.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/389/CWE416_Use_After_Free__return_freed_ptr_07.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/389/CWE416_Use_After_Free__return_freed_ptr_07.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/390/CWE416_Use_After_Free__return_freed_ptr_08.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/390/CWE416_Use_After_Free__return_freed_ptr_08.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/390/CWE416_Use_After_Free__return_freed_ptr_08.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/390/CWE416_Use_After_Free__return_freed_ptr_08.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/390/CWE416_Use_After_Free__return_freed_ptr_08.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_159"
    ],
    "keyLine": "0_159",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/390/CWE416_Use_After_Free__return_freed_ptr_08.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/393/CWE416_Use_After_Free__return_freed_ptr_11.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/393/CWE416_Use_After_Free__return_freed_ptr_11.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/393/CWE416_Use_After_Free__return_freed_ptr_11.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/393/CWE416_Use_After_Free__return_freed_ptr_11.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/393/CWE416_Use_After_Free__return_freed_ptr_11.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/393/CWE416_Use_After_Free__return_freed_ptr_11.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c"
    ],
    "nodes-line": [
      "    if(5!=5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 != 5 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/305/CWE416_Use_After_Free__malloc_free_int_03.c"
    ],
    "nodes-line": [
      "    if(5==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 5 == 5 )",
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/292/CWE416_Use_After_Free__malloc_free_int64_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/292/CWE416_Use_After_Free__malloc_free_int64_t_10.c"
    ],
    "nodes-line": [
      "    if(globalFalse)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/292/CWE416_Use_After_Free__malloc_free_int64_t_10.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/292/CWE416_Use_After_Free__malloc_free_int64_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/292/CWE416_Use_After_Free__malloc_free_int64_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (int64_t *)malloc(100*sizeof(int64_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printLongLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_162",
      "0_164",
      "0_165",
      "0_170",
      "0_178"
    ],
    "keyLine": "0_164",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/307/CWE416_Use_After_Free__malloc_free_int_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_70",
      "0_75",
      "0_79"
    ],
    "keyLine": "0_69",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/307/CWE416_Use_After_Free__malloc_free_int_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_35",
      "0_37",
      "0_38",
      "0_43",
      "0_47",
      "0_52"
    ],
    "keyLine": "0_37",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/307/CWE416_Use_After_Free__malloc_free_int_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_203"
    ],
    "keyLine": "0_203",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/307/CWE416_Use_After_Free__malloc_free_int_05.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_79"
    ],
    "keyLine": "0_79",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/307/CWE416_Use_After_Free__malloc_free_int_05.c"
    ],
    "nodes-line": [
      "    if(staticTrue)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_62",
      "0_64",
      "0_65",
      "0_70",
      "0_71",
      "0_75"
    ],
    "keyLine": "0_64",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/344/CWE416_Use_After_Free__malloc_free_struct_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_160",
      "0_162",
      "0_163",
      "0_168",
      "0_169",
      "0_177"
    ],
    "keyLine": "0_162",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/344/CWE416_Use_After_Free__malloc_free_struct_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_127",
      "0_134",
      "0_135",
      "0_140",
      "0_141",
      "0_149"
    ],
    "keyLine": "0_134",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/344/CWE416_Use_After_Free__malloc_free_struct_02.c"
    ],
    "nodes-line": [
      "    if(0)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 0 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_42"
    ],
    "keyLine": "0_42",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/344/CWE416_Use_After_Free__malloc_free_struct_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_202"
    ],
    "keyLine": "0_202",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/344/CWE416_Use_After_Free__malloc_free_struct_02.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_38",
      "0_42",
      "0_47"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/344/CWE416_Use_After_Free__malloc_free_struct_02.c"
    ],
    "nodes-line": [
      "    if(1)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( 1 )",
      "VAR1 = ( VAR2 * ) malloc ( 100 * sizeof ( VAR2 ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR3 ] . VAR4 = 1 ;",
      "VAR1 [ VAR3 ] . VAR5 = 2 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( & VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_33",
      "0_36",
      "0_38",
      "0_39",
      "0_43",
      "0_48"
    ],
    "keyLine": "0_32",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        0
      ],
      [
        1,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        3,
        0
      ],
      [
        4,
        5
      ],
      [
        5,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/359/CWE416_Use_After_Free__malloc_free_struct_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "VAR2 [ VAR1 ] . VAR4 = 1 ;",
      "VAR2 [ VAR1 ] . VAR5 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_104",
      "0_112"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        0
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/359/CWE416_Use_After_Free__malloc_free_struct_17.c"
    ],
    "nodes-line": [
      "    for(h = 0; h < 1; h++)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_64",
      "0_66",
      "0_67",
      "0_70",
      "0_72",
      "0_73",
      "0_77"
    ],
    "keyLine": "0_66",
    "edges-No": [
      [
        0,
        0
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        6
      ],
      [
        2,
        2
      ],
      [
        3,
        0
      ],
      [
        3,
        3
      ],
      [
        3,
        4
      ],
      [
        3,
        5
      ],
      [
        4,
        5
      ],
      [
        5,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/359/CWE416_Use_After_Free__malloc_free_struct_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "            for(i = 0; i < 100; i++)\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "VAR2 [ VAR1 ] . VAR4 = 1 ;",
      "VAR2 [ VAR1 ] . VAR5 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_135"
    ],
    "keyLine": "0_135",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/359/CWE416_Use_After_Free__malloc_free_struct_17.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_30",
      "0_32",
      "0_36",
      "0_43"
    ],
    "keyLine": "0_43",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        0
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ],
      [
        2,
        0
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/359/CWE416_Use_After_Free__malloc_free_struct_17.c"
    ],
    "nodes-line": [
      "    for(i = 0; i < 1; i++)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "            for(i = 0; i < 100; i++)\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "for ( VAR1 = 0 ; VAR1 < 1 ; VAR1 ++ )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "for ( VAR1 = 0 ; VAR1 < 100 ; VAR1 ++ )",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/376/CWE416_Use_After_Free__malloc_free_wchar_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/376/CWE416_Use_After_Free__malloc_free_wchar_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/376/CWE416_Use_After_Free__malloc_free_wchar_t_14.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_109",
      "0_116",
      "0_117",
      "0_125"
    ],
    "keyLine": "0_116",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/376/CWE416_Use_After_Free__malloc_free_wchar_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive!=5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/376/CWE416_Use_After_Free__malloc_free_wchar_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/376/CWE416_Use_After_Free__malloc_free_wchar_t_14.c"
    ],
    "nodes-line": [
      "    if(globalFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_95",
      "0_97",
      "0_98",
      "0_103",
      "0_107"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_124",
      "0_131",
      "0_132",
      "0_137",
      "0_145"
    ],
    "keyLine": "0_131",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE!=5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_197"
    ],
    "keyLine": "0_197",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_63",
      "0_73"
    ],
    "keyLine": "0_73",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        free(data);\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_156",
      "0_158",
      "0_159",
      "0_164",
      "0_172"
    ],
    "keyLine": "0_158",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/315/CWE416_Use_After_Free__malloc_free_int_13.c"
    ],
    "nodes-line": [
      "    if(GLOBAL_CONST_FIVE==5)\n",
      "        data = (int *)malloc(100*sizeof(int));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5;\n",
      "        printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR3 ] = 5 ;",
      "FUN2 ( VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_90",
      "0_92",
      "0_97"
    ],
    "keyLine": "0_97",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/369/CWE416_Use_After_Free__malloc_free_wchar_t_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_41",
      "0_46"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/369/CWE416_Use_After_Free__malloc_free_wchar_t_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_141",
      "0_143",
      "0_144",
      "0_152"
    ],
    "keyLine": "0_143",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/369/CWE416_Use_After_Free__malloc_free_wchar_t_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_177"
    ],
    "keyLine": "0_177",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/369/CWE416_Use_After_Free__malloc_free_wchar_t_07.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_114",
      "0_121",
      "0_122",
      "0_130"
    ],
    "keyLine": "0_121",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/369/CWE416_Use_After_Free__malloc_free_wchar_t_07.c"
    ],
    "nodes-line": [
      "    if(staticFive!=5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_90",
      "0_92",
      "0_93",
      "0_97"
    ],
    "keyLine": "0_92",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/369/CWE416_Use_After_Free__malloc_free_wchar_t_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_36"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/372/CWE416_Use_After_Free__malloc_free_wchar_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_136",
      "0_138",
      "0_139",
      "0_147"
    ],
    "keyLine": "0_138",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/372/CWE416_Use_After_Free__malloc_free_wchar_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_172"
    ],
    "keyLine": "0_172",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/372/CWE416_Use_After_Free__malloc_free_wchar_t_10.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_85",
      "0_87",
      "0_88",
      "0_92"
    ],
    "keyLine": "0_87",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/372/CWE416_Use_After_Free__malloc_free_wchar_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_31",
      "0_32",
      "0_36",
      "0_41"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        1,
        3
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/372/CWE416_Use_After_Free__malloc_free_wchar_t_10.c"
    ],
    "nodes-line": [
      "    if(globalTrue)\n",
      "        data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "        free(data);\n",
      "        printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 )",
      "VAR2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR2 ) ;",
      "FUN2 ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_169",
      "0_171",
      "0_172",
      "0_177",
      "0_185"
    ],
    "keyLine": "0_171",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/330/CWE416_Use_After_Free__malloc_free_long_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_42",
      "0_44",
      "0_45",
      "0_50",
      "0_54",
      "0_59"
    ],
    "keyLine": "0_44",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/330/CWE416_Use_After_Free__malloc_free_long_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n",
      "        printLongLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;",
      "FUN3 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_74",
      "0_76",
      "0_77",
      "0_82",
      "0_86"
    ],
    "keyLine": "0_76",
    "edges-No": [
      [
        0,
        4
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        2
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/330/CWE416_Use_After_Free__malloc_free_long_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i] = 5L;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "if ( VAR1 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5L ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_210"
    ],
    "keyLine": "0_210",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/330/CWE416_Use_After_Free__malloc_free_long_08.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_74",
      "0_76",
      "0_86"
    ],
    "keyLine": "0_86",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/330/CWE416_Use_After_Free__malloc_free_long_08.c"
    ],
    "nodes-line": [
      "    if(staticReturnsTrue())\n",
      "        data = (long *)malloc(100*sizeof(long));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( FUN1 ( ) )",
      "VAR1 = ( long * ) malloc ( 100 * sizeof ( long ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ],
      [
        2,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        3,
        4
      ],
      [
        4,
        5
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/392/CWE416_Use_After_Free__return_freed_ptr_10.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        free(reversedString);\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_53",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/392/CWE416_Use_After_Free__return_freed_ptr_10.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_43",
      "0_47",
      "0_48",
      "0_50",
      "0_51",
      "0_52",
      "0_55",
      "0_57",
      "0_59"
    ],
    "keyLine": "0_51",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/392/CWE416_Use_After_Free__return_freed_ptr_10.c"
    ],
    "nodes-line": [
      "static char * helperGood(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_146"
    ],
    "keyLine": "0_146",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/392/CWE416_Use_After_Free__return_freed_ptr_10.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_28",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_25",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        7
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        10
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        2,
        6
      ],
      [
        3,
        8
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        3,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        10
      ],
      [
        4,
        5
      ],
      [
        4,
        7
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ],
      [
        6,
        7
      ],
      [
        7,
        7
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/392/CWE416_Use_After_Free__return_freed_ptr_10.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "        for (j = 0; j < i; j++)\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "for ( VAR4 = 0 ; VAR4 < VAR3 ; VAR4 ++ )",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_18",
      "0_22",
      "0_23",
      "0_25",
      "0_26",
      "0_27",
      "0_30",
      "0_32",
      "0_34",
      "0_35"
    ],
    "keyLine": "0_26",
    "edges-No": [
      [
        0,
        3
      ],
      [
        0,
        6
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        2
      ],
      [
        2,
        7
      ],
      [
        2,
        8
      ],
      [
        2,
        9
      ],
      [
        2,
        3
      ],
      [
        2,
        4
      ],
      [
        2,
        5
      ],
      [
        3,
        7
      ],
      [
        3,
        4
      ],
      [
        3,
        6
      ],
      [
        4,
        7
      ],
      [
        4,
        8
      ],
      [
        4,
        9
      ],
      [
        4,
        5
      ],
      [
        4,
        6
      ],
      [
        5,
        5
      ],
      [
        6,
        6
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/392/CWE416_Use_After_Free__return_freed_ptr_10.c"
    ],
    "nodes-line": [
      "static char * helperBad(char * aString)\n",
      "    char * reversedString = NULL;\n",
      "    if (aString != NULL)\n",
      "        i = strlen(aString);\n",
      "        reversedString = (char *) malloc(i+1);\n",
      "        if (reversedString == NULL) {exit(-1);}\n",
      "            reversedString[j] = aString[i-j-1];\n",
      "        reversedString[i] = '\\0';\n",
      "        free(reversedString);\n",
      "        return reversedString;\n"
    ],
    "nodes-line-sym": [
      "static char * FUN1 ( char * VAR1 )",
      "char * VAR2 = NULL ;",
      "if ( VAR1 != NULL )",
      "VAR3 = strlen ( VAR1 ) ;",
      "VAR2 = ( char * ) malloc ( VAR3 + 1 ) ;",
      "if ( VAR2 == NULL ) { FUN2 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] = VAR1 [ VAR3 - VAR4 - 1 ] ;",
      "VAR2 [ VAR3 ] = '' ;",
      "free ( VAR2 ) ;",
      "return VAR2 ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_71"
    ],
    "keyLine": "0_71",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/320/CWE416_Use_After_Free__malloc_free_int_18.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_88",
      "0_89",
      "0_94",
      "0_101"
    ],
    "keyLine": "0_88",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ],
      [
        2,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/320/CWE416_Use_After_Free__malloc_free_int_18.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5;\n",
      "    printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_123"
    ],
    "keyLine": "0_123",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/320/CWE416_Use_After_Free__malloc_free_int_18.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_61",
      "0_62",
      "0_67",
      "0_71"
    ],
    "keyLine": "0_61",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/320/CWE416_Use_After_Free__malloc_free_int_18.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5;\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_31",
      "0_32",
      "0_37",
      "0_41",
      "0_45"
    ],
    "keyLine": "0_31",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        3
      ],
      [
        0,
        4
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ],
      [
        2,
        4
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/320/CWE416_Use_After_Free__malloc_free_int_18.c"
    ],
    "nodes-line": [
      "    data = (int *)malloc(100*sizeof(int));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "            data[i] = 5;\n",
      "    free(data);\n",
      "    printIntLine(data[0]);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR1 [ VAR2 ] = 5 ;",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_96"
    ],
    "keyLine": "0_96",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/363/CWE416_Use_After_Free__malloc_free_wchar_t_01.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_34"
    ],
    "keyLine": "0_34",
    "edges-No": [
      [
        0,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/363/CWE416_Use_After_Free__malloc_free_wchar_t_01.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_66",
      "0_67",
      "0_71"
    ],
    "keyLine": "0_66",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/363/CWE416_Use_After_Free__malloc_free_wchar_t_01.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    free(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_50",
      "0_51",
      "0_56"
    ],
    "keyLine": "0_50",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/363/CWE416_Use_After_Free__malloc_free_wchar_t_01.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_29",
      "0_30",
      "0_34",
      "0_36"
    ],
    "keyLine": "0_29",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        3
      ],
      [
        0,
        1
      ],
      [
        1,
        1
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/363/CWE416_Use_After_Free__malloc_free_wchar_t_01.c"
    ],
    "nodes-line": [
      "    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n",
      "    if (data == NULL) {exit(-1);}\n",
      "    free(data);\n",
      "    printWLine(data);\n"
    ],
    "nodes-line-sym": [
      "VAR1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ;",
      "if ( VAR1 == NULL ) { FUN1 ( - 1 ) ; }",
      "free ( VAR1 ) ;",
      "FUN2 ( VAR1 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_37",
      "0_42",
      "0_43",
      "0_47",
      "0_52"
    ],
    "keyLine": "0_36",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        0,
        5
      ],
      [
        1,
        6
      ],
      [
        1,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/349/CWE416_Use_After_Free__malloc_free_struct_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_67",
      "0_69",
      "0_70",
      "0_75",
      "0_76",
      "0_80"
    ],
    "keyLine": "0_69",
    "edges-No": [
      [
        0,
        5
      ],
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/349/CWE416_Use_After_Free__malloc_free_struct_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_165",
      "0_167",
      "0_168",
      "0_173",
      "0_174",
      "0_182"
    ],
    "keyLine": "0_167",
    "edges-No": [
      [
        0,
        2
      ],
      [
        0,
        1
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/349/CWE416_Use_After_Free__malloc_free_struct_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_132",
      "0_139",
      "0_140",
      "0_145",
      "0_146",
      "0_154"
    ],
    "keyLine": "0_139",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        3
      ],
      [
        1,
        4
      ],
      [
        1,
        2
      ],
      [
        1,
        5
      ],
      [
        2,
        2
      ],
      [
        3,
        4
      ],
      [
        4,
        3
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/349/CWE416_Use_After_Free__malloc_free_struct_07.c"
    ],
    "nodes-line": [
      "    if(staticFive!=5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        if (data == NULL) {exit(-1);}\n",
      "                data[i].intOne = 1;\n",
      "                data[i].intTwo = 2;\n",
      "        printStructLine(&data[0]);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 != 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "if ( VAR2 == NULL ) { FUN1 ( - 1 ) ; }",
      "VAR2 [ VAR4 ] . VAR5 = 1 ;",
      "VAR2 [ VAR4 ] . VAR6 = 2 ;",
      "FUN2 ( & VAR2 [ 0 ] ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_34",
      "0_36",
      "0_47"
    ],
    "keyLine": "0_47",
    "edges-No": [
      [
        0,
        1
      ],
      [
        0,
        2
      ],
      [
        1,
        2
      ]
    ],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/349/CWE416_Use_After_Free__malloc_free_struct_07.c"
    ],
    "nodes-line": [
      "    if(staticFive==5)\n",
      "        data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\n",
      "        free(data);\n"
    ],
    "nodes-line-sym": [
      "if ( VAR1 == 5 )",
      "VAR2 = ( VAR3 * ) malloc ( 100 * sizeof ( VAR3 ) ) ;",
      "free ( VAR2 ) ;"
    ]
  },
  {
    "nodes-lineNo": [
      "0_207"
    ],
    "keyLine": "0_207",
    "edges-No": [],
    "target": 0,
    "filePathList": [
      "/home/niexu/project/python/preprocess/test/000/240/349/CWE416_Use_After_Free__malloc_free_struct_07.c"
    ],
    "nodes-line": [
      "    srand( (unsigned)time(NULL) );\n"
    ],
    "nodes-line-sym": [
      "srand ( ( unsigned ) time ( NULL ) ) ;"
    ]
  }
]