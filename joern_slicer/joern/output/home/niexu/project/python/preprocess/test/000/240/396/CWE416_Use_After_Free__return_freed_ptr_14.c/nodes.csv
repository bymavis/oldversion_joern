command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	52811	File	/home/niexu/project/python/preprocess/test/000/240/396/CWE416_Use_After_Free__return_freed_ptr_14.c								
ANR	52812	Function	helperBad	18:0:537:1157							
ANR	52813	FunctionDef	helperBad (char * aString)		52812	0					
ANR	52814	CompoundStatement		19:0:578:1157	52812	0					
ANR	52815	IdentifierDeclStatement	size_t i = 0 ;	20:4:585:597	52812	0	True				
ANR	52816	IdentifierDecl	i = 0		52812	0					
ANR	52817	IdentifierDeclType	size_t		52812	0					
ANR	52818	Identifier	i		52812	1					
ANR	52819	AssignmentExpression	i = 0		52812	2		=			
ANR	52820	Identifier	i		52812	0					
ANR	52821	PrimaryExpression	0		52812	1					
ANR	52822	IdentifierDeclStatement	size_t j ;	21:4:604:612	52812	1	True				
ANR	52823	IdentifierDecl	j		52812	0					
ANR	52824	IdentifierDeclType	size_t		52812	0					
ANR	52825	Identifier	j		52812	1					
ANR	52826	IdentifierDeclStatement	char * reversedString = NULL ;	22:4:619:647	52812	2	True				
ANR	52827	IdentifierDecl	* reversedString = NULL		52812	0					
ANR	52828	IdentifierDeclType	char *		52812	0					
ANR	52829	Identifier	reversedString		52812	1					
ANR	52830	AssignmentExpression	* reversedString = NULL		52812	2		=			
ANR	52831	Identifier	NULL		52812	0					
ANR	52832	Identifier	NULL		52812	1					
ANR	52833	IfStatement	if ( aString != NULL )		52812	3					
ANR	52834	Condition	aString != NULL	23:8:658:672	52812	0	True				
ANR	52835	EqualityExpression	aString != NULL		52812	0		!=			
ANR	52836	Identifier	aString		52812	0					
ANR	52837	Identifier	NULL		52812	1					
ANR	52838	CompoundStatement		6:4:101:101	52812	1					
ANR	52839	ExpressionStatement	i = strlen ( aString )	25:8:691:710	52812	0	True				
ANR	52840	AssignmentExpression	i = strlen ( aString )		52812	0		=			
ANR	52841	Identifier	i		52812	0					
ANR	52842	CallExpression	strlen ( aString )		52812	1					
ANR	52843	Callee	strlen		52812	0					
ANR	52844	Identifier	strlen		52812	0					
ANR	52845	ArgumentList	aString		52812	1					
ANR	52846	Argument	aString		52812	0					
ANR	52847	Identifier	aString		52812	0					
ANR	52848	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	26:8:721:758	52812	1	True				
ANR	52849	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		52812	0		=			
ANR	52850	Identifier	reversedString		52812	0					
ANR	52851	CastExpression	( char * ) malloc ( i + 1 )		52812	1					
ANR	52852	CastTarget	char *		52812	0					
ANR	52853	CallExpression	malloc ( i + 1 )		52812	1					
ANR	52854	Callee	malloc		52812	0					
ANR	52855	Identifier	malloc		52812	0					
ANR	52856	ArgumentList	i + 1		52812	1					
ANR	52857	Argument	i + 1		52812	0					
ANR	52858	AdditiveExpression	i + 1		52812	0		+			
ANR	52859	Identifier	i		52812	0					
ANR	52860	PrimaryExpression	1		52812	1					
ANR	52861	IfStatement	if ( reversedString == NULL )		52812	2					
ANR	52862	Condition	reversedString == NULL	27:12:773:794	52812	0	True				
ANR	52863	EqualityExpression	reversedString == NULL		52812	0		==			
ANR	52864	Identifier	reversedString		52812	0					
ANR	52865	Identifier	NULL		52812	1					
ANR	52866	CompoundStatement		9:36:218:218	52812	1					
ANR	52867	ExpressionStatement	exit ( - 1 )	27:37:798:806	52812	0	True				
ANR	52868	CallExpression	exit ( - 1 )		52812	0					
ANR	52869	Callee	exit		52812	0					
ANR	52870	Identifier	exit		52812	0					
ANR	52871	ArgumentList	- 1		52812	1					
ANR	52872	Argument	- 1		52812	0					
ANR	52873	UnaryOperationExpression	- 1		52812	0					
ANR	52874	UnaryOperator	-		52812	0					
ANR	52875	PrimaryExpression	1		52812	1					
ANR	52876	ForStatement	for ( j = 0 ; j < i ; j ++ )		52812	3					
ANR	52877	ForInit	j = 0 ;	28:13:822:827	52812	0	True				
ANR	52878	AssignmentExpression	j = 0		52812	0		=			
ANR	52879	Identifier	j		52812	0					
ANR	52880	PrimaryExpression	0		52812	1					
ANR	52881	Condition	j < i	28:20:829:833	52812	1	True				
ANR	52882	RelationalExpression	j < i		52812	0		<			
ANR	52883	Identifier	j		52812	0					
ANR	52884	Identifier	i		52812	1					
ANR	52885	PostIncDecOperationExpression	j ++	28:27:836:838	52812	2	True				
ANR	52886	Identifier	j		52812	0					
ANR	52887	IncDec	++		52812	1					
ANR	52888	CompoundStatement		11:8:271:271	52812	3					
ANR	52889	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	30:12:865:899	52812	0	True				
ANR	52890	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		52812	0		=			
ANR	52891	ArrayIndexing	reversedString [ j ]		52812	0					
ANR	52892	Identifier	reversedString		52812	0					
ANR	52893	Identifier	j		52812	1					
ANR	52894	ArrayIndexing	aString [ i - j - 1 ]		52812	1					
ANR	52895	Identifier	aString		52812	0					
ANR	52896	AdditiveExpression	i - j - 1		52812	1		-			
ANR	52897	Identifier	i		52812	0					
ANR	52898	AdditiveExpression	j - 1		52812	1		-			
ANR	52899	Identifier	j		52812	0					
ANR	52900	PrimaryExpression	1		52812	1					
ANR	52901	ExpressionStatement	reversedString [ i ] = '\\0'	32:8:921:945	52812	4	True				
ANR	52902	AssignmentExpression	reversedString [ i ] = '\\0'		52812	0		=			
ANR	52903	ArrayIndexing	reversedString [ i ]		52812	0					
ANR	52904	Identifier	reversedString		52812	0					
ANR	52905	Identifier	i		52812	1					
ANR	52906	PrimaryExpression	'\\0'		52812	1					
ANR	52907	ExpressionStatement	free ( reversedString )	34:8:1049:1069	52812	5	True				
ANR	52908	CallExpression	free ( reversedString )		52812	0					
ANR	52909	Callee	free		52812	0					
ANR	52910	Identifier	free		52812	0					
ANR	52911	ArgumentList	reversedString		52812	1					
ANR	52912	Argument	reversedString		52812	0					
ANR	52913	Identifier	reversedString		52812	0					
ANR	52914	ReturnStatement	return reversedString ;	35:8:1080:1101	52812	6	True				
ANR	52915	Identifier	reversedString		52812	0					
ANR	52916	ElseStatement	else		52812	0					
ANR	52917	CompoundStatement		20:4:546:546	52812	0					
ANR	52918	ReturnStatement	return NULL ;	39:8:1136:1147	52812	0	True				
ANR	52919	Identifier	NULL		52812	0					
ANR	52920	ReturnType	static char *		52812	1					
ANR	52921	Identifier	helperBad		52812	2					
ANR	52922	ParameterList	char * aString		52812	3					
ANR	52923	Parameter	char * aString	18:24:561:574	52812	0	True				
ANR	52924	ParameterType	char *		52812	0					
ANR	52925	Identifier	aString		52812	1					
ANR	52926	CFGEntryNode	ENTRY		52812		True				
ANR	52927	CFGExitNode	EXIT		52812		True				
ANR	52928	Symbol	strlen		52812						
ANR	52929	Symbol	malloc		52812						
ANR	52930	Symbol	NULL		52812						
ANR	52931	Symbol	* i		52812						
ANR	52932	Symbol	aString		52812						
ANR	52933	Symbol	* j		52812						
ANR	52934	Symbol	reversedString		52812						
ANR	52935	Symbol	i		52812						
ANR	52936	Symbol	* reversedString		52812						
ANR	52937	Symbol	j		52812						
ANR	52938	Symbol	* aString		52812						
ANR	52939	Function	helperGood	43:0:1162:1719							
ANR	52940	FunctionDef	helperGood (char * aString)		52939	0					
ANR	52941	CompoundStatement		44:0:1204:1719	52939	0					
ANR	52942	IdentifierDeclStatement	size_t i = 0 ;	45:4:1211:1223	52939	0	True				
ANR	52943	IdentifierDecl	i = 0		52939	0					
ANR	52944	IdentifierDeclType	size_t		52939	0					
ANR	52945	Identifier	i		52939	1					
ANR	52946	AssignmentExpression	i = 0		52939	2		=			
ANR	52947	Identifier	i		52939	0					
ANR	52948	PrimaryExpression	0		52939	1					
ANR	52949	IdentifierDeclStatement	size_t j ;	46:4:1230:1238	52939	1	True				
ANR	52950	IdentifierDecl	j		52939	0					
ANR	52951	IdentifierDeclType	size_t		52939	0					
ANR	52952	Identifier	j		52939	1					
ANR	52953	IdentifierDeclStatement	char * reversedString = NULL ;	47:4:1245:1273	52939	2	True				
ANR	52954	IdentifierDecl	* reversedString = NULL		52939	0					
ANR	52955	IdentifierDeclType	char *		52939	0					
ANR	52956	Identifier	reversedString		52939	1					
ANR	52957	AssignmentExpression	* reversedString = NULL		52939	2		=			
ANR	52958	Identifier	NULL		52939	0					
ANR	52959	Identifier	NULL		52939	1					
ANR	52960	IfStatement	if ( aString != NULL )		52939	3					
ANR	52961	Condition	aString != NULL	48:8:1284:1298	52939	0	True				
ANR	52962	EqualityExpression	aString != NULL		52939	0		!=			
ANR	52963	Identifier	aString		52939	0					
ANR	52964	Identifier	NULL		52939	1					
ANR	52965	CompoundStatement		6:4:101:101	52939	1					
ANR	52966	ExpressionStatement	i = strlen ( aString )	50:8:1317:1336	52939	0	True				
ANR	52967	AssignmentExpression	i = strlen ( aString )		52939	0		=			
ANR	52968	Identifier	i		52939	0					
ANR	52969	CallExpression	strlen ( aString )		52939	1					
ANR	52970	Callee	strlen		52939	0					
ANR	52971	Identifier	strlen		52939	0					
ANR	52972	ArgumentList	aString		52939	1					
ANR	52973	Argument	aString		52939	0					
ANR	52974	Identifier	aString		52939	0					
ANR	52975	ExpressionStatement	reversedString = ( char * ) malloc ( i + 1 )	51:8:1347:1384	52939	1	True				
ANR	52976	AssignmentExpression	reversedString = ( char * ) malloc ( i + 1 )		52939	0		=			
ANR	52977	Identifier	reversedString		52939	0					
ANR	52978	CastExpression	( char * ) malloc ( i + 1 )		52939	1					
ANR	52979	CastTarget	char *		52939	0					
ANR	52980	CallExpression	malloc ( i + 1 )		52939	1					
ANR	52981	Callee	malloc		52939	0					
ANR	52982	Identifier	malloc		52939	0					
ANR	52983	ArgumentList	i + 1		52939	1					
ANR	52984	Argument	i + 1		52939	0					
ANR	52985	AdditiveExpression	i + 1		52939	0		+			
ANR	52986	Identifier	i		52939	0					
ANR	52987	PrimaryExpression	1		52939	1					
ANR	52988	IfStatement	if ( reversedString == NULL )		52939	2					
ANR	52989	Condition	reversedString == NULL	52:12:1399:1420	52939	0	True				
ANR	52990	EqualityExpression	reversedString == NULL		52939	0		==			
ANR	52991	Identifier	reversedString		52939	0					
ANR	52992	Identifier	NULL		52939	1					
ANR	52993	CompoundStatement		9:36:218:218	52939	1					
ANR	52994	ExpressionStatement	exit ( - 1 )	52:37:1424:1432	52939	0	True				
ANR	52995	CallExpression	exit ( - 1 )		52939	0					
ANR	52996	Callee	exit		52939	0					
ANR	52997	Identifier	exit		52939	0					
ANR	52998	ArgumentList	- 1		52939	1					
ANR	52999	Argument	- 1		52939	0					
ANR	53000	UnaryOperationExpression	- 1		52939	0					
ANR	53001	UnaryOperator	-		52939	0					
ANR	53002	PrimaryExpression	1		52939	1					
ANR	53003	ForStatement	for ( j = 0 ; j < i ; j ++ )		52939	3					
ANR	53004	ForInit	j = 0 ;	53:13:1448:1453	52939	0	True				
ANR	53005	AssignmentExpression	j = 0		52939	0		=			
ANR	53006	Identifier	j		52939	0					
ANR	53007	PrimaryExpression	0		52939	1					
ANR	53008	Condition	j < i	53:20:1455:1459	52939	1	True				
ANR	53009	RelationalExpression	j < i		52939	0		<			
ANR	53010	Identifier	j		52939	0					
ANR	53011	Identifier	i		52939	1					
ANR	53012	PostIncDecOperationExpression	j ++	53:27:1462:1464	52939	2	True				
ANR	53013	Identifier	j		52939	0					
ANR	53014	IncDec	++		52939	1					
ANR	53015	CompoundStatement		11:8:271:271	52939	3					
ANR	53016	ExpressionStatement	reversedString [ j ] = aString [ i - j - 1 ]	55:12:1491:1525	52939	0	True				
ANR	53017	AssignmentExpression	reversedString [ j ] = aString [ i - j - 1 ]		52939	0		=			
ANR	53018	ArrayIndexing	reversedString [ j ]		52939	0					
ANR	53019	Identifier	reversedString		52939	0					
ANR	53020	Identifier	j		52939	1					
ANR	53021	ArrayIndexing	aString [ i - j - 1 ]		52939	1					
ANR	53022	Identifier	aString		52939	0					
ANR	53023	AdditiveExpression	i - j - 1		52939	1		-			
ANR	53024	Identifier	i		52939	0					
ANR	53025	AdditiveExpression	j - 1		52939	1		-			
ANR	53026	Identifier	j		52939	0					
ANR	53027	PrimaryExpression	1		52939	1					
ANR	53028	ExpressionStatement	reversedString [ i ] = '\\0'	57:8:1547:1571	52939	4	True				
ANR	53029	AssignmentExpression	reversedString [ i ] = '\\0'		52939	0		=			
ANR	53030	ArrayIndexing	reversedString [ i ]		52939	0					
ANR	53031	Identifier	reversedString		52939	0					
ANR	53032	Identifier	i		52939	1					
ANR	53033	PrimaryExpression	'\\0'		52939	1					
ANR	53034	ReturnStatement	return reversedString ;	59:8:1642:1663	52939	5	True				
ANR	53035	Identifier	reversedString		52939	0					
ANR	53036	ElseStatement	else		52939	0					
ANR	53037	CompoundStatement		19:4:482:482	52939	0					
ANR	53038	ReturnStatement	return NULL ;	63:8:1698:1709	52939	0	True				
ANR	53039	Identifier	NULL		52939	0					
ANR	53040	ReturnType	static char *		52939	1					
ANR	53041	Identifier	helperGood		52939	2					
ANR	53042	ParameterList	char * aString		52939	3					
ANR	53043	Parameter	char * aString	43:25:1187:1200	52939	0	True				
ANR	53044	ParameterType	char *		52939	0					
ANR	53045	Identifier	aString		52939	1					
ANR	53046	CFGEntryNode	ENTRY		52939		True				
ANR	53047	CFGExitNode	EXIT		52939		True				
ANR	53048	Symbol	strlen		52939						
ANR	53049	Symbol	malloc		52939						
ANR	53050	Symbol	NULL		52939						
ANR	53051	Symbol	* i		52939						
ANR	53052	Symbol	aString		52939						
ANR	53053	Symbol	* j		52939						
ANR	53054	Symbol	reversedString		52939						
ANR	53055	Symbol	i		52939						
ANR	53056	Symbol	* reversedString		52939						
ANR	53057	Symbol	j		52939						
ANR	53058	Symbol	* aString		52939						
ANR	53059	Function	CWE416_Use_After_Free__return_freed_ptr_14_bad	69:0:1743:2270							
ANR	53060	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_14_bad ()		53059	0					
ANR	53061	CompoundStatement		70:0:1798:2270	53059	0					
ANR	53062	IfStatement	if ( globalFive == 5 )		53059	0					
ANR	53063	Condition	globalFive == 5	71:7:1808:1820	53059	0	True				
ANR	53064	EqualityExpression	globalFive == 5		53059	0		==			
ANR	53065	Identifier	globalFive		53059	0					
ANR	53066	PrimaryExpression	5		53059	1					
ANR	53067	CompoundStatement		3:4:29:29	53059	1					
ANR	53068	CompoundStatement		6:12:103:147	53059	0					
ANR	53069	IdentifierDeclStatement	"char * reversedString = helperBad ( ""BadSink"" ) ;"	75:12:1902:1946	53059	0	True				
ANR	53070	IdentifierDecl	"* reversedString = helperBad ( ""BadSink"" )"		53059	0					
ANR	53071	IdentifierDeclType	char *		53059	0					
ANR	53072	Identifier	reversedString		53059	1					
ANR	53073	AssignmentExpression	"* reversedString = helperBad ( ""BadSink"" )"		53059	2		=			
ANR	53074	Identifier	reversedString		53059	0					
ANR	53075	CallExpression	"helperBad ( ""BadSink"" )"		53059	1					
ANR	53076	Callee	helperBad		53059	0					
ANR	53077	Identifier	helperBad		53059	0					
ANR	53078	ArgumentList	"""BadSink"""		53059	1					
ANR	53079	Argument	"""BadSink"""		53059	0					
ANR	53080	PrimaryExpression	"""BadSink"""		53059	0					
ANR	53081	ExpressionStatement	printLine ( reversedString )	76:12:1961:1986	53059	1	True				
ANR	53082	CallExpression	printLine ( reversedString )		53059	0					
ANR	53083	Callee	printLine		53059	0					
ANR	53084	Identifier	printLine		53059	0					
ANR	53085	ArgumentList	reversedString		53059	1					
ANR	53086	Argument	reversedString		53059	0					
ANR	53087	Identifier	reversedString		53059	0					
ANR	53088	ReturnType	void		53059	1					
ANR	53089	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_bad		53059	2					
ANR	53090	ParameterList			53059	3					
ANR	53091	CFGEntryNode	ENTRY		53059		True				
ANR	53092	CFGExitNode	EXIT		53059		True				
ANR	53093	Symbol	helperBad		53059						
ANR	53094	Symbol	reversedString		53059						
ANR	53095	Symbol	globalFive		53059						
ANR	53096	Function	good1	90:0:2386:3026							
ANR	53097	FunctionDef	good1 ()		53096	0					
ANR	53098	CompoundStatement		91:0:2407:3026	53096	0					
ANR	53099	IfStatement	if ( globalFive != 5 )		53096	0					
ANR	53100	Condition	globalFive != 5	92:7:2417:2429	53096	0	True				
ANR	53101	EqualityExpression	globalFive != 5		53096	0		!=			
ANR	53102	Identifier	globalFive		53096	0					
ANR	53103	PrimaryExpression	5		53096	1					
ANR	53104	CompoundStatement		3:4:29:29	53096	1					
ANR	53105	ExpressionStatement	"printLine ( ""Benign, fixed string"" )"	95:8:2524:2557	53096	0	True				
ANR	53106	CallExpression	"printLine ( ""Benign, fixed string"" )"		53096	0					
ANR	53107	Callee	printLine		53096	0					
ANR	53108	Identifier	printLine		53096	0					
ANR	53109	ArgumentList	"""Benign, fixed string"""		53096	1					
ANR	53110	Argument	"""Benign, fixed string"""		53096	0					
ANR	53111	PrimaryExpression	"""Benign, fixed string"""		53096	0					
ANR	53112	ElseStatement	else		53096	0					
ANR	53113	CompoundStatement		8:4:173:173	53096	0					
ANR	53114	CompoundStatement		11:12:248:294	53096	0					
ANR	53115	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	101:12:2656:2702	53096	0	True				
ANR	53116	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		53096	0					
ANR	53117	IdentifierDeclType	char *		53096	0					
ANR	53118	Identifier	reversedString		53096	1					
ANR	53119	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		53096	2		=			
ANR	53120	Identifier	reversedString		53096	0					
ANR	53121	CallExpression	"helperGood ( ""GoodSink"" )"		53096	1					
ANR	53122	Callee	helperGood		53096	0					
ANR	53123	Identifier	helperGood		53096	0					
ANR	53124	ArgumentList	"""GoodSink"""		53096	1					
ANR	53125	Argument	"""GoodSink"""		53096	0					
ANR	53126	PrimaryExpression	"""GoodSink"""		53096	0					
ANR	53127	ExpressionStatement	printLine ( reversedString )	102:12:2717:2742	53096	1	True				
ANR	53128	CallExpression	printLine ( reversedString )		53096	0					
ANR	53129	Callee	printLine		53096	0					
ANR	53130	Identifier	printLine		53096	0					
ANR	53131	ArgumentList	reversedString		53096	1					
ANR	53132	Argument	reversedString		53096	0					
ANR	53133	Identifier	reversedString		53096	0					
ANR	53134	ReturnType	static void		53096	1					
ANR	53135	Identifier	good1		53096	2					
ANR	53136	ParameterList			53096	3					
ANR	53137	CFGEntryNode	ENTRY		53096		True				
ANR	53138	CFGExitNode	EXIT		53096		True				
ANR	53139	Symbol	reversedString		53096						
ANR	53140	Symbol	helperGood		53096						
ANR	53141	Symbol	globalFive		53096						
ANR	53142	Function	good2	112:0:3086:3582							
ANR	53143	FunctionDef	good2 ()		53142	0					
ANR	53144	CompoundStatement		113:0:3107:3582	53142	0					
ANR	53145	IfStatement	if ( globalFive == 5 )		53142	0					
ANR	53146	Condition	globalFive == 5	114:7:3117:3129	53142	0	True				
ANR	53147	EqualityExpression	globalFive == 5		53142	0		==			
ANR	53148	Identifier	globalFive		53142	0					
ANR	53149	PrimaryExpression	5		53142	1					
ANR	53150	CompoundStatement		3:4:29:29	53142	1					
ANR	53151	CompoundStatement		6:12:104:150	53142	0					
ANR	53152	IdentifierDeclStatement	"char * reversedString = helperGood ( ""GoodSink"" ) ;"	118:12:3212:3258	53142	0	True				
ANR	53153	IdentifierDecl	"* reversedString = helperGood ( ""GoodSink"" )"		53142	0					
ANR	53154	IdentifierDeclType	char *		53142	0					
ANR	53155	Identifier	reversedString		53142	1					
ANR	53156	AssignmentExpression	"* reversedString = helperGood ( ""GoodSink"" )"		53142	2		=			
ANR	53157	Identifier	reversedString		53142	0					
ANR	53158	CallExpression	"helperGood ( ""GoodSink"" )"		53142	1					
ANR	53159	Callee	helperGood		53142	0					
ANR	53160	Identifier	helperGood		53142	0					
ANR	53161	ArgumentList	"""GoodSink"""		53142	1					
ANR	53162	Argument	"""GoodSink"""		53142	0					
ANR	53163	PrimaryExpression	"""GoodSink"""		53142	0					
ANR	53164	ExpressionStatement	printLine ( reversedString )	119:12:3273:3298	53142	1	True				
ANR	53165	CallExpression	printLine ( reversedString )		53142	0					
ANR	53166	Callee	printLine		53142	0					
ANR	53167	Identifier	printLine		53142	0					
ANR	53168	ArgumentList	reversedString		53142	1					
ANR	53169	Argument	reversedString		53142	0					
ANR	53170	Identifier	reversedString		53142	0					
ANR	53171	ReturnType	static void		53142	1					
ANR	53172	Identifier	good2		53142	2					
ANR	53173	ParameterList			53142	3					
ANR	53174	CFGEntryNode	ENTRY		53142		True				
ANR	53175	CFGExitNode	EXIT		53142		True				
ANR	53176	Symbol	reversedString		53142						
ANR	53177	Symbol	helperGood		53142						
ANR	53178	Symbol	globalFive		53142						
ANR	53179	Function	CWE416_Use_After_Free__return_freed_ptr_14_good	128:0:3587:3674							
ANR	53180	FunctionDef	CWE416_Use_After_Free__return_freed_ptr_14_good ()		53179	0					
ANR	53181	CompoundStatement		129:0:3643:3674	53179	0					
ANR	53182	ExpressionStatement	good1 ( )	130:4:3650:3657	53179	0	True				
ANR	53183	CallExpression	good1 ( )		53179	0					
ANR	53184	Callee	good1		53179	0					
ANR	53185	Identifier	good1		53179	0					
ANR	53186	ArgumentList			53179	1					
ANR	53187	ExpressionStatement	good2 ( )	131:4:3664:3671	53179	1	True				
ANR	53188	CallExpression	good2 ( )		53179	0					
ANR	53189	Callee	good2		53179	0					
ANR	53190	Identifier	good2		53179	0					
ANR	53191	ArgumentList			53179	1					
ANR	53192	ReturnType	void		53179	1					
ANR	53193	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_good		53179	2					
ANR	53194	ParameterList			53179	3					
ANR	53195	CFGEntryNode	ENTRY		53179		True				
ANR	53196	CFGExitNode	EXIT		53179		True				
ANR	53197	Function	main	143:0:4021:4470							
ANR	53198	FunctionDef	"main (int argc , char * argv [ ])"		53197	0					
ANR	53199	CompoundStatement		144:0:4056:4470	53197	0					
ANR	53200	ExpressionStatement	srand ( ( unsigned ) time ( NULL ) )	146:4:4090:4119	53197	0	True				
ANR	53201	CallExpression	srand ( ( unsigned ) time ( NULL ) )		53197	0					
ANR	53202	Callee	srand		53197	0					
ANR	53203	Identifier	srand		53197	0					
ANR	53204	ArgumentList	( unsigned ) time ( NULL )		53197	1					
ANR	53205	Argument	( unsigned ) time ( NULL )		53197	0					
ANR	53206	CastExpression	( unsigned ) time ( NULL )		53197	0					
ANR	53207	CastTarget	unsigned		53197	0					
ANR	53208	CallExpression	time ( NULL )		53197	1					
ANR	53209	Callee	time		53197	0					
ANR	53210	Identifier	time		53197	0					
ANR	53211	ArgumentList	NULL		53197	1					
ANR	53212	Argument	NULL		53197	0					
ANR	53213	Identifier	NULL		53197	0					
ANR	53214	ExpressionStatement	"printLine ( ""Calling good()..."" )"	148:4:4144:4174	53197	1	True				
ANR	53215	CallExpression	"printLine ( ""Calling good()..."" )"		53197	0					
ANR	53216	Callee	printLine		53197	0					
ANR	53217	Identifier	printLine		53197	0					
ANR	53218	ArgumentList	"""Calling good()..."""		53197	1					
ANR	53219	Argument	"""Calling good()..."""		53197	0					
ANR	53220	PrimaryExpression	"""Calling good()..."""		53197	0					
ANR	53221	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_14_good ( )	149:4:4181:4230	53197	2	True				
ANR	53222	CallExpression	CWE416_Use_After_Free__return_freed_ptr_14_good ( )		53197	0					
ANR	53223	Callee	CWE416_Use_After_Free__return_freed_ptr_14_good		53197	0					
ANR	53224	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_good		53197	0					
ANR	53225	ArgumentList			53197	1					
ANR	53226	ExpressionStatement	"printLine ( ""Finished good()"" )"	150:4:4237:4265	53197	3	True				
ANR	53227	CallExpression	"printLine ( ""Finished good()"" )"		53197	0					
ANR	53228	Callee	printLine		53197	0					
ANR	53229	Identifier	printLine		53197	0					
ANR	53230	ArgumentList	"""Finished good()"""		53197	1					
ANR	53231	Argument	"""Finished good()"""		53197	0					
ANR	53232	PrimaryExpression	"""Finished good()"""		53197	0					
ANR	53233	ExpressionStatement	"printLine ( ""Calling bad()..."" )"	153:4:4312:4341	53197	4	True				
ANR	53234	CallExpression	"printLine ( ""Calling bad()..."" )"		53197	0					
ANR	53235	Callee	printLine		53197	0					
ANR	53236	Identifier	printLine		53197	0					
ANR	53237	ArgumentList	"""Calling bad()..."""		53197	1					
ANR	53238	Argument	"""Calling bad()..."""		53197	0					
ANR	53239	PrimaryExpression	"""Calling bad()..."""		53197	0					
ANR	53240	ExpressionStatement	CWE416_Use_After_Free__return_freed_ptr_14_bad ( )	154:4:4348:4396	53197	5	True				
ANR	53241	CallExpression	CWE416_Use_After_Free__return_freed_ptr_14_bad ( )		53197	0					
ANR	53242	Callee	CWE416_Use_After_Free__return_freed_ptr_14_bad		53197	0					
ANR	53243	Identifier	CWE416_Use_After_Free__return_freed_ptr_14_bad		53197	0					
ANR	53244	ArgumentList			53197	1					
ANR	53245	ExpressionStatement	"printLine ( ""Finished bad()"" )"	155:4:4403:4430	53197	6	True				
ANR	53246	CallExpression	"printLine ( ""Finished bad()"" )"		53197	0					
ANR	53247	Callee	printLine		53197	0					
ANR	53248	Identifier	printLine		53197	0					
ANR	53249	ArgumentList	"""Finished bad()"""		53197	1					
ANR	53250	Argument	"""Finished bad()"""		53197	0					
ANR	53251	PrimaryExpression	"""Finished bad()"""		53197	0					
ANR	53252	ReturnStatement	return 0 ;	157:4:4459:4467	53197	7	True				
ANR	53253	PrimaryExpression	0		53197	0					
ANR	53254	ReturnType	int		53197	1					
ANR	53255	Identifier	main		53197	2					
ANR	53256	ParameterList	"int argc , char * argv [ ]"		53197	3					
ANR	53257	Parameter	int argc	143:9:4030:4037	53197	0	True				
ANR	53258	ParameterType	int		53197	0					
ANR	53259	Identifier	argc		53197	1					
ANR	53260	Parameter	char * argv [ ]	143:19:4040:4052	53197	1	True				
ANR	53261	ParameterType	char * [ ]		53197	0					
ANR	53262	Identifier	argv		53197	1					
ANR	53263	CFGEntryNode	ENTRY		53197		True				
ANR	53264	CFGExitNode	EXIT		53197		True				
ANR	53265	Symbol	argc		53197						
ANR	53266	Symbol	NULL		53197						
ANR	53267	Symbol	time		53197						
ANR	53268	Symbol	argv		53197						
